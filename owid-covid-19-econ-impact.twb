<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='owid-covid-data' inline='true' name='federated.0p0z2bm1fhtccq1gsrscn0ibswh6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.0dz6cey0n4b9z913zd7sl0ymq2vq'>
            <connection class='textscan' directory='C:/Users/zmpro/Development/Projects/Misc/owid-covid-dataviz-tableau' filename='owid-covid-data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='location_clusters' name='textscan.1kmi44w17w29w316vdkql0ujy4od'>
            <connection class='textscan' directory='C:/Users/zmpro/Development/Projects/Misc/owid-covid-dataviz-tableau' filename='location_clusters.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1kmi44w17w29w316vdkql0ujy4od' name='location_clusters.csv' table='[location_clusters#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_MY' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='string' name='cluster' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0dz6cey0n4b9z913zd7sl0ymq2vq' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_MY' separator=','>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_cases' ordinal='4' />
              <column datatype='real' name='new_cases' ordinal='5' />
              <column datatype='real' name='new_cases_smoothed' ordinal='6' />
              <column datatype='real' name='total_deaths' ordinal='7' />
              <column datatype='real' name='new_deaths' ordinal='8' />
              <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
              <column datatype='real' name='total_cases_per_million' ordinal='10' />
              <column datatype='real' name='new_cases_per_million' ordinal='11' />
              <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
              <column datatype='real' name='total_deaths_per_million' ordinal='13' />
              <column datatype='real' name='new_deaths_per_million' ordinal='14' />
              <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
              <column datatype='real' name='reproduction_rate' ordinal='16' />
              <column datatype='string' name='icu_patients' ordinal='17' />
              <column datatype='string' name='icu_patients_per_million' ordinal='18' />
              <column datatype='string' name='hosp_patients' ordinal='19' />
              <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
              <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
              <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
              <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
              <column datatype='integer' name='weekly_hosp_admissions_per_million' ordinal='24' />
              <column datatype='real' name='total_tests' ordinal='25' />
              <column datatype='string' name='new_tests' ordinal='26' />
              <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
              <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
              <column datatype='real' name='new_tests_smoothed' ordinal='29' />
              <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
              <column datatype='real' name='positive_rate' ordinal='31' />
              <column datatype='real' name='tests_per_case' ordinal='32' />
              <column datatype='string' name='tests_units' ordinal='33' />
              <column datatype='real' name='total_vaccinations' ordinal='34' />
              <column datatype='real' name='people_vaccinated' ordinal='35' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
              <column datatype='string' name='total_boosters' ordinal='37' />
              <column datatype='real' name='new_vaccinations' ordinal='38' />
              <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
              <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
              <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
              <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
              <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
              <column datatype='real' name='stringency_index' ordinal='47' />
              <column datatype='real' name='population_density' ordinal='48' />
              <column datatype='real' name='median_age' ordinal='49' />
              <column datatype='real' name='aged_65_older' ordinal='50' />
              <column datatype='real' name='aged_70_older' ordinal='51' />
              <column datatype='real' name='gdp_per_capita' ordinal='52' />
              <column datatype='string' name='extreme_poverty' ordinal='53' />
              <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
              <column datatype='real' name='diabetes_prevalence' ordinal='55' />
              <column datatype='string' name='female_smokers' ordinal='56' />
              <column datatype='string' name='male_smokers' ordinal='57' />
              <column datatype='real' name='handwashing_facilities' ordinal='58' />
              <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
              <column datatype='real' name='life_expectancy' ordinal='60' />
              <column datatype='real' name='human_development_index' ordinal='61' />
              <column datatype='real' name='population' ordinal='62' />
              <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='63' />
              <column datatype='string' name='excess_mortality_cumulative' ordinal='64' />
              <column datatype='string' name='excess_mortality' ordinal='65' />
              <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='66' />
            </columns>
          </relation>
          <relation connection='textscan.1kmi44w17w29w316vdkql0ujy4od' name='location_clusters.csv' table='[location_clusters#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_MY' separator=','>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='string' name='cluster' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[aged_65_older]' value='[owid-covid-data.csv].[aged_65_older]' />
          <map key='[aged_70_older]' value='[owid-covid-data.csv].[aged_70_older]' />
          <map key='[cardiovasc_death_rate]' value='[owid-covid-data.csv].[cardiovasc_death_rate]' />
          <map key='[cluster]' value='[location_clusters.csv].[cluster]' />
          <map key='[continent]' value='[owid-covid-data.csv].[continent]' />
          <map key='[date]' value='[owid-covid-data.csv].[date]' />
          <map key='[diabetes_prevalence]' value='[owid-covid-data.csv].[diabetes_prevalence]' />
          <map key='[excess_mortality]' value='[owid-covid-data.csv].[excess_mortality]' />
          <map key='[excess_mortality_cumulative]' value='[owid-covid-data.csv].[excess_mortality_cumulative]' />
          <map key='[excess_mortality_cumulative_absolute]' value='[owid-covid-data.csv].[excess_mortality_cumulative_absolute]' />
          <map key='[excess_mortality_cumulative_per_million]' value='[owid-covid-data.csv].[excess_mortality_cumulative_per_million]' />
          <map key='[extreme_poverty]' value='[owid-covid-data.csv].[extreme_poverty]' />
          <map key='[female_smokers]' value='[owid-covid-data.csv].[female_smokers]' />
          <map key='[gdp_per_capita]' value='[owid-covid-data.csv].[gdp_per_capita]' />
          <map key='[handwashing_facilities]' value='[owid-covid-data.csv].[handwashing_facilities]' />
          <map key='[hosp_patients]' value='[owid-covid-data.csv].[hosp_patients]' />
          <map key='[hosp_patients_per_million]' value='[owid-covid-data.csv].[hosp_patients_per_million]' />
          <map key='[hospital_beds_per_thousand]' value='[owid-covid-data.csv].[hospital_beds_per_thousand]' />
          <map key='[human_development_index]' value='[owid-covid-data.csv].[human_development_index]' />
          <map key='[icu_patients]' value='[owid-covid-data.csv].[icu_patients]' />
          <map key='[icu_patients_per_million]' value='[owid-covid-data.csv].[icu_patients_per_million]' />
          <map key='[iso_code]' value='[owid-covid-data.csv].[iso_code]' />
          <map key='[life_expectancy]' value='[owid-covid-data.csv].[life_expectancy]' />
          <map key='[location (location_clusters.csv)]' value='[location_clusters.csv].[location]' />
          <map key='[location]' value='[owid-covid-data.csv].[location]' />
          <map key='[male_smokers]' value='[owid-covid-data.csv].[male_smokers]' />
          <map key='[median_age]' value='[owid-covid-data.csv].[median_age]' />
          <map key='[new_cases]' value='[owid-covid-data.csv].[new_cases]' />
          <map key='[new_cases_per_million]' value='[owid-covid-data.csv].[new_cases_per_million]' />
          <map key='[new_cases_smoothed]' value='[owid-covid-data.csv].[new_cases_smoothed]' />
          <map key='[new_cases_smoothed_per_million]' value='[owid-covid-data.csv].[new_cases_smoothed_per_million]' />
          <map key='[new_deaths]' value='[owid-covid-data.csv].[new_deaths]' />
          <map key='[new_deaths_per_million]' value='[owid-covid-data.csv].[new_deaths_per_million]' />
          <map key='[new_deaths_smoothed]' value='[owid-covid-data.csv].[new_deaths_smoothed]' />
          <map key='[new_deaths_smoothed_per_million]' value='[owid-covid-data.csv].[new_deaths_smoothed_per_million]' />
          <map key='[new_people_vaccinated_smoothed]' value='[owid-covid-data.csv].[new_people_vaccinated_smoothed]' />
          <map key='[new_people_vaccinated_smoothed_per_hundred]' value='[owid-covid-data.csv].[new_people_vaccinated_smoothed_per_hundred]' />
          <map key='[new_tests]' value='[owid-covid-data.csv].[new_tests]' />
          <map key='[new_tests_per_thousand]' value='[owid-covid-data.csv].[new_tests_per_thousand]' />
          <map key='[new_tests_smoothed]' value='[owid-covid-data.csv].[new_tests_smoothed]' />
          <map key='[new_tests_smoothed_per_thousand]' value='[owid-covid-data.csv].[new_tests_smoothed_per_thousand]' />
          <map key='[new_vaccinations]' value='[owid-covid-data.csv].[new_vaccinations]' />
          <map key='[new_vaccinations_smoothed]' value='[owid-covid-data.csv].[new_vaccinations_smoothed]' />
          <map key='[new_vaccinations_smoothed_per_million]' value='[owid-covid-data.csv].[new_vaccinations_smoothed_per_million]' />
          <map key='[people_fully_vaccinated]' value='[owid-covid-data.csv].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[owid-covid-data.csv].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated]' value='[owid-covid-data.csv].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred]' value='[owid-covid-data.csv].[people_vaccinated_per_hundred]' />
          <map key='[population]' value='[owid-covid-data.csv].[population]' />
          <map key='[population_density]' value='[owid-covid-data.csv].[population_density]' />
          <map key='[positive_rate]' value='[owid-covid-data.csv].[positive_rate]' />
          <map key='[reproduction_rate]' value='[owid-covid-data.csv].[reproduction_rate]' />
          <map key='[stringency_index]' value='[owid-covid-data.csv].[stringency_index]' />
          <map key='[tests_per_case]' value='[owid-covid-data.csv].[tests_per_case]' />
          <map key='[tests_units]' value='[owid-covid-data.csv].[tests_units]' />
          <map key='[total_boosters]' value='[owid-covid-data.csv].[total_boosters]' />
          <map key='[total_boosters_per_hundred]' value='[owid-covid-data.csv].[total_boosters_per_hundred]' />
          <map key='[total_cases]' value='[owid-covid-data.csv].[total_cases]' />
          <map key='[total_cases_per_million]' value='[owid-covid-data.csv].[total_cases_per_million]' />
          <map key='[total_deaths]' value='[owid-covid-data.csv].[total_deaths]' />
          <map key='[total_deaths_per_million]' value='[owid-covid-data.csv].[total_deaths_per_million]' />
          <map key='[total_tests]' value='[owid-covid-data.csv].[total_tests]' />
          <map key='[total_tests_per_thousand]' value='[owid-covid-data.csv].[total_tests_per_thousand]' />
          <map key='[total_vaccinations]' value='[owid-covid-data.csv].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred]' value='[owid-covid-data.csv].[total_vaccinations_per_hundred]' />
          <map key='[weekly_hosp_admissions]' value='[owid-covid-data.csv].[weekly_hosp_admissions]' />
          <map key='[weekly_hosp_admissions_per_million]' value='[owid-covid-data.csv].[weekly_hosp_admissions_per_million]' />
          <map key='[weekly_icu_admissions]' value='[owid-covid-data.csv].[weekly_icu_admissions]' />
          <map key='[weekly_icu_admissions_per_million]' value='[owid-covid-data.csv].[weekly_icu_admissions_per_million]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;RM&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_MY&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[location_clusters.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;RM&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_MY&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location (location_clusters.csv)]</local-name>
            <parent-name>[location_clusters.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[location_clusters.csv]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='total-cases-per-capita-percent' datatype='real' name='[Calculation_1009650795888451591]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_cases]/[population]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='location_clusters.csv' datatype='table' name='[__tableau_internal_object_id__].[location_clusters.csv_C74BDBA3109B40A8AB9CDCD9E8BA3027]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data.csv_4D35DCC32F4648B8B3996A97717641AB]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Cluster' datatype='string' name='[cluster]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='string' name='[excess_mortality]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative' datatype='string' name='[excess_mortality_cumulative]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='string' name='[excess_mortality_cumulative_absolute]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='string' name='[excess_mortality_cumulative_per_million]' role='dimension' type='nominal' />
      <column caption='Extreme Poverty' datatype='string' name='[extreme_poverty]' role='dimension' type='nominal' />
      <column caption='Female Smokers' datatype='string' name='[female_smokers]' role='dimension' type='nominal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='dimension' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location (Location Clusters.Csv)' datatype='string' name='[location (location_clusters.csv)]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='string' name='[male_smokers]' role='dimension' type='nominal' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='real' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='string' name='[total_boosters]' role='dimension' type='nominal' />
      <column caption='Total Boosters Per Hundred' datatype='string' name='[total_boosters_per_hundred]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='integer' name='[weekly_hosp_admissions_per_million]' role='dimension' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[gdp_per_capita]' derivation='Avg' name='[avg:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='Avg' name='[avg:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Avg' name='[avg:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[stringency_index]' derivation='Avg' name='[avg:stringency_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Max' name='[max:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[stringency_index]' derivation='Median' name='[med:stringency_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cluster]' derivation='Min' name='[min:cluster:nk]' pivot='key' type='nominal' />
      <column-instance column='[cluster]' derivation='None' name='[none:cluster:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_cases_per_million]' derivation='Sum' name='[pcdf:sum:new_cases_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[yr:date:ok]' ordering-field='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='Sum' name='[sum:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Sum' name='[sum:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Var' name='[var:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#000000'>
              <bucket>%null%</bucket>
            </map>
            <map to='#00d969'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#639ad4'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ab621e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:cluster:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low total cases low stringency&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low total cases, high stringency&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%missing%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;High total cases, medium stringency&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:stringency_index:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[med:stringency_index:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[max:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[var:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[pcdf:sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:Calculation_316096453463912448:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_deaths_per_million:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:cluster:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Low total cases, high stringency&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Low total cases low stringency&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;High total cases, medium stringency&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Malaysia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='location_clusters.csv' id='location_clusters.csv_C74BDBA3109B40A8AB9CDCD9E8BA3027'>
            <properties context=''>
              <relation connection='textscan.1kmi44w17w29w316vdkql0ujy4od' name='location_clusters.csv' table='[location_clusters#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_MY' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='string' name='cluster' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='owid-covid-data.csv' id='owid-covid-data.csv_4D35DCC32F4648B8B3996A97717641AB'>
            <properties context=''>
              <relation connection='textscan.0dz6cey0n4b9z913zd7sl0ymq2vq' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_MY' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='integer' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='real' name='total_tests' ordinal='25' />
                  <column datatype='string' name='new_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='real' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='total_vaccinations' ordinal='34' />
                  <column datatype='real' name='people_vaccinated' ordinal='35' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='string' name='total_boosters' ordinal='37' />
                  <column datatype='real' name='new_vaccinations' ordinal='38' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
                  <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
                  <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
                  <column datatype='real' name='stringency_index' ordinal='47' />
                  <column datatype='real' name='population_density' ordinal='48' />
                  <column datatype='real' name='median_age' ordinal='49' />
                  <column datatype='real' name='aged_65_older' ordinal='50' />
                  <column datatype='real' name='aged_70_older' ordinal='51' />
                  <column datatype='real' name='gdp_per_capita' ordinal='52' />
                  <column datatype='string' name='extreme_poverty' ordinal='53' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='55' />
                  <column datatype='string' name='female_smokers' ordinal='56' />
                  <column datatype='string' name='male_smokers' ordinal='57' />
                  <column datatype='real' name='handwashing_facilities' ordinal='58' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
                  <column datatype='real' name='life_expectancy' ordinal='60' />
                  <column datatype='real' name='human_development_index' ordinal='61' />
                  <column datatype='real' name='population' ordinal='62' />
                  <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='63' />
                  <column datatype='string' name='excess_mortality_cumulative' ordinal='64' />
                  <column datatype='string' name='excess_mortality' ordinal='65' />
                  <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='66' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[location]' />
              <expression op='[location (location_clusters.csv)]' />
            </expression>
            <first-end-point object-id='owid-covid-data.csv_4D35DCC32F4648B8B3996A97717641AB' />
            <second-end-point object-id='location_clusters.csv_C74BDBA3109B40A8AB9CDCD9E8BA3027' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Cases and Deaths by Income over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0p0z2bm1fhtccq1gsrscn0ibswh6' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0z2bm1fhtccq1gsrscn0ibswh6'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
            <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases_smoothed_per_million]' derivation='Sum' name='[sum:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths_smoothed_per_million]' derivation='Sum' name='[sum:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;High income&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Low income&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower middle income&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper middle income&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;High income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_deaths_smoothed_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_cases_smoothed_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_cases_smoothed_per_million:qk] + [federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_deaths_smoothed_per_million:qk])</rows>
        <cols>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{AA7FFB23-11F6-48D9-88F2-7D680C8BEDEE}' />
    </worksheet>
    <worksheet name='Economic status to stringency covid response'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Countries&apos; GDP by Total Cases over Median Stringency Index
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0p0z2bm1fhtccq1gsrscn0ibswh6' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0z2bm1fhtccq1gsrscn0ibswh6'>
            <column caption='Cluster' datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Max' name='[max:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stringency_index]' derivation='Median' name='[med:stringency_index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cluster]' derivation='Min' name='[min:cluster:nk]' pivot='key' type='nominal' />
            <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
            <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[min:cluster:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[min:cluster:nk]' />
              <groupfilter function='member' level='[min:cluster:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_cases_per_million:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>559794.8249999996</max>
          </filter>
          <filter class='categorical' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:date:ok]' member='2023' />
                <groupfilter function='member' level='[yr:date:ok]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[yr:date:ok]</column>
            <column>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]</column>
            <column>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:continent:nk]</column>
            <column>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_cases_per_million:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[min:cluster:nk]' />
              <size column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[max:gdp_per_capita:qk]' />
              <text column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='2' />
                <format attr='mark-color' value='#1b1b1b' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_cases_per_million:qk]</rows>
        <cols>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[med:stringency_index:qk]</cols>
      </table>
      <simple-id uuid='{557936D4-203E-4B82-9BD1-5363CBF5FDB6}' />
    </worksheet>
    <worksheet name='New Cases and Deaths by Response type and Stringency'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0p0z2bm1fhtccq1gsrscn0ibswh6' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0z2bm1fhtccq1gsrscn0ibswh6'>
            <column-instance column='[new_cases_smoothed_per_million]' derivation='Avg' name='[avg:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths_smoothed_per_million]' derivation='Avg' name='[avg:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_people_vaccinated_smoothed_per_hundred]' derivation='Avg' name='[avg:new_people_vaccinated_smoothed_per_hundred:qk]' pivot='key' type='quantitative' />
            <column caption='Cluster' datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
            <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
            <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
            <column-instance column='[cluster]' derivation='None' name='[none:cluster:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:cluster:nk]' />
              <groupfilter function='member' level='[none:cluster:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_deaths_smoothed_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_cases_smoothed_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_people_vaccinated_smoothed_per_hundred:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_deaths_smoothed_per_million:qk] + ([federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_cases_smoothed_per_million:qk] + [federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_people_vaccinated_smoothed_per_hundred:qk]))</rows>
        <cols>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{DF633AC2-E2CD-4524-9324-49F493656AF6}' />
    </worksheet>
    <worksheet name='Stringency to Death by Response over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stringency to Death by Response over Time
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0p0z2bm1fhtccq1gsrscn0ibswh6' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0z2bm1fhtccq1gsrscn0ibswh6'>
            <column-instance column='[new_deaths_smoothed_per_million]' derivation='Avg' name='[avg:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stringency_index]' derivation='Avg' name='[avg:stringency_index:qk]' pivot='key' type='quantitative' />
            <column caption='Cluster' datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
            <column-instance column='[cluster]' derivation='None' name='[none:cluster:nk]' pivot='key' type='nominal' />
            <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:cluster:nk]' />
              <groupfilter function='member' level='[none:cluster:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:stringency_index:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:stringency_index:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_deaths_smoothed_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk] * ([federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:new_deaths_smoothed_per_million:qk] + [federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[avg:stringency_index:qk]))</rows>
        <cols>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{E67445F4-E3ED-4F33-9002-25564557B65C}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Cases and Deaths by Income over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[tmn:date:qk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E8A9E20-7008-4BE3-9267-3D254E35FC99}' />
    </window>
    <window class='worksheet' name='Economic status to stringency covid response'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[max:gdp_per_capita:qk]' type='size' />
            <card pane-specification-id='4' param='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[min:cluster:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[min:cluster:nk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location:nk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9166E68A-DF4D-4AD9-92CE-8E12EBAF07ED}' />
    </window>
    <window class='worksheet' name='New Cases and Deaths by Response type and Stringency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='271'>
            <card pane-specification-id='3' param='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:hosp_patients_per_million:nk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:hosp_patients_per_million:qk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:location (location_clusters.csv):nk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:weekly_hosp_admissions_per_million:qk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59F641AF-7317-463B-AB14-E6541F514167}' />
    </window>
    <window class='worksheet' maximized='true' name='Stringency to Death by Response over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[:Measure Names]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[none:cluster:nk]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[sum:new_deaths_per_million:ok]</field>
            <field>[federated.0p0z2bm1fhtccq1gsrscn0ibswh6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DDA238A-9E03-4398-BAA5-43CBAF8C0BDF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases and Deaths by Income over Time' width='192'>
      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
      HnOa/w98rTSAEB9eEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Economic status to stringency covid response' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases and Deaths by Response type and Stringency' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Qdx3Wg/1WHl8PkiAEwwCAHAiASCWYxiVSgRCpRVvBKWsuWvV5rZcva
      XQfJYb3SBv9sraxoBWslrSRSzBLFnEECBEAiYxAm5/Tyex2qfn+84YDgPAwGYYAB2N85c86b
      7urq+17X7bp169YtoZRSeHi8TdEutAAeHhcS440PqVSKs+kMcrkcwWDwnAjl4XG+mFCAaDQ6
      cVBJieO6GIaBEOKkF7cdOUS4vJbKsihSSkKh0MxK6+FxjjFKHdzx8vNYhFi/+XLMKS5OJBI4
      epDqijiapmEYJavzmCGUY4EAofsutCgXLSXHAJVlEfYcOHzKi+tqaz2z5wLiHH4Ma8ePL7QY
      FzUlFWBoNMOcyjj2KS6ubZxLY23VDIjlMR1ksgdr6zeQo20XWpSLlhIKYBEMRND8wdL2kces
      QWWHMRbfit362IUW5aJlkgJkxxIMpZL4/Z5dOZtRSiGHj+Df8ke47S+h3FP11x6lKNEDCIQQ
      aNrJvT8eFw5lZcje9zmcAw8jItWIcA0iEAUrO1HGaX8Rd/jIBZTy4mGSAoTKYlRGYhdCFo9p
      4Bx9Gjl6jMLz/0jg2i8ihEBE6pDJruL5thfIP/5l3PYXL7CkFweTFGCkq4NnXt5Ke1ffhZDH
      YwqUU8Decw/B9/wzetMGRCAOgF6/Grd/HwDO4cdRqR7s/Q9i7b7nQop7UTBJAQKROMuXLaOm
      IoYXJDS7sA88jD73CrSKBQRu/tuJ41rFAuTIEXK/+RL2nnsR0QZUbgS37VkAlOugXOtCiT2r
      maQAmmFSXlFOfUM9+oWQyOOkOEeexFx1V9Hs0Y4/HS3eWBwIZwbxbf4sWsUCtNgc5Gg71qs/
      JPPDd5H/zZdQSl5A6WcnkzydgUgZFZEhKhrmeQowS1BKkbv/cwh/FBEom3Re+GPoczehResx
      L/8E5BPI9AC4FvbBRwje8vdYr/0M59CjGItvQQgvBvINRKlw6I5Dr7OzdYjbbrsec4pYoDeT
      TCaJxbzB87lGKYVz+HGsV75L8PavoZXNLV0unwRABEo/A+v1X1B44iuIeCPB2/4Het3KGZP5
      YqLkq2B4rJ/OfW2nnAn2mHlk7y7sPfcSuOnLJ238UGz4J2v8AOay2wne+R30+jU4nS975tA4
      kyfChnvpH7G58a534UX5XHjsfffjv+IP0GuWnlU9wgxhzN2M7/JP4Bx6FOfo0+dGwIucSQqQ
      HB5DD5rs3b7T6wEuMDLRhcol0GrPnbmi1ywjeNvXcA49es7qnI0oZ3per0mD4NqWJVQ2t5Q+
      6XFecTpfxlh4/ZRrMs4EEZ+DSvejHAthXHohL0q65O7/HMH3fh1h+KcsO6kHyGcS3PvLe3j4
      3gfJnOJGdjZF7+DI2cjqMQVu13b0xrXnvF6h6Wh1q3B7dk5Pjt7XUK4DjMcgjXWc1erBGccp
      IAcPYu+975RFJ73kg9FyNqyez2MvdzK17kDv0AhSKaQsQ0qJ4zhnKrLHW1EuMjOEDFYjZ+B3
      FXVrcPr2QMPlU5aT7S9gPfPf8d30N4h4I/YTX8bt3o5esxzjmi+iVS0+57KdLWqsE3wRnP69
      aKf47UpaOY4Q6AWHqf0EEqeQJ20rNE3zVoSdY9zhdvT4HAxfYEbq16pasI49M+UzU9Kl8ML/
      BhTu7p8hBw+ilTcTvO1r2IcepfD/Pkrooz9Hr1o0IzKeKfk9vyRw3Z+R/+1foG3+fbRY/UnL
      lvz2yjFZflnLKVJGaCxYtOTsJPU4KW77i+gN5978eQMRiKPyY1MXsrOIWCOBK/+Q7E8/gojU
      ELj5bxCBGPrczTjzrsQ59OisUwCVHkCrXgJCQ2UGYQoFmNTGc8lhugZHz/nAa6aQYx3YBx65
      0GKcc+RoO1rt8pm7QSCGKqSmnA9QhTQiEEMrm4veeDmhj/x0Yq5BGAH0eVuQQ60zJ+MZoJRC
      2VlEuBq9/jJUPjFl+UkKEIzFSA4OMzY8zMVg0TsdL2G9+n2UnT114YsImexCi9TOWP1CaIhI
      LWqs46RlVGYQEaxA+MIE7/wOWqjyxDqC5SjXQuVO0ZOcT6QNQiA0A2PhDcUeYApKWDkGy1cs
      wh+LMVsdZDI9gCqkip8HDiATXRRe/PolM7v5RlgDvsiM3kdv2oDTsfXEe4+vLFOujb3nXoz5
      WwBKxg8JITCar8E5+tSMynlaOAUYd33qDWtxurZPWbzkijClFHYmM2snwuw99+AcfgIAmeol
      /JGfYb/2M5xDv73Akp0b5MhRtMpFM26GGnM24Ha8fPy+iS4yP3wP7sB+7J3/FxGpQZ+7eco6
      9DmX43ZPz516PpCZIYR/3EwLV6Oyw1OWLznONQwDdbKTswDn2LOoQrL4xnctRHwO/mu/iNs9
      tbZfLLjDrehVLTN+HxFvQtlZZHYY5VrkH/8K/i1/TP63f4E7sBffmrtPGTmqVSxA5kaQie4Z
      l3c6uD07MZo2Fv8xi8E8JzPRlJ0r3cYFLiOJ9MxIeA5QY52o3Cgq0YWI1CE0HXPl+3A7Xqaw
      7XsXWryzRiV6EPGmGb+PEALfuo+Rf/gL5O799+g1yzCX3Ero7p8ReOdXEcHJodeT6tAM9LrV
      OMeemXF5p0U+MREyXjTRrsY5yfJQt/f10gowMjJKWSw6e1eECYEqpJCpXrR4Y/GQ7sNYfAvO
      vvtRhdmrvNNBpvum9F2fS/R5W0DTMRZcj7n+k0CxUZ+O+aVF67Be/hbKzs+QlNNH5cZOUFyj
      +Rrczlcml1MK59izpecBXFcRjUVmpQmkpAv+GMrKoAoZhP94TlPfFZ9DBMtwjj2LufS2Cyjl
      2aHyCYQveuqC5wAhBME7/gVOs9G/GWPxzditv0XlRxHm+VHckyFH2xDRhuMHfBFU7sRwHaUk
      bsfLyMEDJWKBxgaYu3gpo6nsrFQAlIsWLEflk6jcCCJYPnFKCIGx5DacQ7+Z3bEqU6CUAtea
      sF/PB0I3z2rALYxA0dRoffyCeuKUa4/PARzPVigMPzI7gnzTYNg9+gyFZ7+G74rPlVCAdIoX
      X3md5vpKZuMyajnUCv4I2Nmin/otvmktVIGyc+Bc+O74jLDSYAZPWPN7MWC03IT12s+QAwcu
      nBB2FmEGT1RmM4jQfeQf/k+oQhqlJNbrPyf4/m9hNK6brABlcxby/nffwqKliwkw+2aDncNP
      gNBBaMhEF1qscVIZLT4HmZwdXonTReVGJ9KdXExooQp8l38cd2DfjN0jb092zB8aGmR7dycw
      bjq+ZVWcEBr6vCtw+/di7/klFFKgGWjh6qLcpW60a9tWfvTdH5KdhcNgOdY+HsMuil6g8S/y
      Zozma3GOzKLJmdNAjrajxeZcaDHOCHPJ7TgHH0Eme85pvXnH5qEDe/m3XdsZzWUZyWZxpeTw
      8BAP7t9DX6o4cShTvYgSs+fm4lsIvf/bOF3bcQf2n7C0tHR69PI4C5Ytn5UzwSqfBM0AM4A7
      eABKmApa9RKcA4+gnMIFkPDscHtfQ5+z/kKLMW329PeSLBTNTeGP4Lvij4qz8vLcjQV6k0le
      6mijP53i33Zu519efoF/efkFHj6wl/evWE3WtlFK4rQ+hlbCfayVzUWrX4PwhbH33Y+x8Prj
      595aOJccZte+VsKh2bkiWBWSoPswF99SnPEroQAiWodWtxJ5EebHlEOtaJULL7QY06JzbJSH
      D+zjtd4elFK0Dg3SF5qLkxujcORJlHRxpcR2XeQZOiWkUvSkkjSXV/LZjVt4z7KVfGbDZlbV
      1pO1barCYQqOw3M7niC/5z5ERenfTgiBFq3HOfr0hPkDpRbExGJgOyRHRnFgyh1ikmPDCDNM
      NDwzMeslETrGgusQZqjoAj1ZjErDWuTQQfSZjKg8xyjpoqz0xFT+bEZKyU9f38l1C1rY3tWJ
      KyVPHDlEc3klvqrbWf3CD6jpO8RDgXX0p5PURKKETB8fWr0WQ5uef/GZo4dJFPK0jY7w7zdc
      QcA0qQqHAUjk84RMk6BpMpbL0nLoJ7yy/PeJ21E2naQ+vWkTPjOEiB43k0rMAxgsXdZMR2/2
      lGuClVIMDgwQnjcHpRSu607ri50Vug+t+Trk4AFE2TykVECJ+1YtxdnzC7Sl75l5mc4RKtkN
      oSqKX+k8/JZngFKKvYP99KfTVIfCrK1roDIYpHVokD/YeCXVkQgo6FywhOHf/GcWX38T71qy
      jB09Xezo6eJrzz7JH2zaQsQ3tYGdKhR4ru0orpJ8ct1GTE07oX3NicXZNGcuQsHvVlpQU4Nx
      9d382+u7uKy+AVPTi+0zm6UmHC4u5WzcgDFnY3Gh13hdJdq4QBgGAx2duEzdA7S3tVHbtLCY
      qk8ItGlq9tlQvI+OVr0E7ar/eNJ7atWLsEfb0YSAi2Rtg3XsGYz5W87p75gq5Hmu7Si9qRSb
      muaysnb6E1Vj+RxjuRxzy8qLvyPwUkcbvakkmhBsmDMX0zBYWFnNwsoTnRHzGxZQmLucJcYI
      erSFdy5ZzjXNLWzr6uC727fy2U1bCJmTW5crJbqm8WJHG6vrGzg4OEB1ODLpNwlogg1RKLy2
      E/uZbxP76JfRfAHqIjG2d3dRE4nw0P69JAp57lp5Gc+1HcXQND6z4YoT6in5S/t0RV3j/FP+
      QEuWr6Q8Hpnwu76hCDP1h5IgNISmIQwfevm8k5fXzeJg2cnOuFzn6k/27cZo2njW9QxlM7zS
      1YGrFC92tBEwTK6YO4+XO9spOM606nCl5DvbtvLAgb0cHBxACIEjJXt6uri9fg63GQFWVFVP
      UYeGueIOnMOPoRIdqPQAEb+fzXPnUx+N8djhg2Qsa6K8Ag4MDvCTXz+EMzJC/thR1txzP7+7
      dAUhn29S/SqfIPuTj5B/8AuYFSZaZfFFvHnuPF7v6+GJw61omsaiymoeO3yIm1qWoAmBq9QJ
      9ZS0cqxCnp7hoVOaQH7/ebT9oThDeho7IhqLbsTe/zC+yz40g0KdG5R0izPboTPfc204m+He
      va+TLhRIWwX6UkkGMxk+eflGDE0ja9s8c+wItyw+dZItW7rURCKsrm0gbVvIQoGh3bu59lcP
      kQg9iTl/Psn7HyBy6y0EVq0sOZOs1S5Hvf5zcg/9J4Q/SvCObxA0g3xo9Vr29vfxi63PszFW
      Tq/fhz8QYP+RVq54/Ck6nnqOZYZB2ZVXwrZXUbfeMlGn0ItOD5Uexh4LE1izilyrIKwVe5Pq
      cISPr92AVIqRXAanf4D5l63D0DS2drZTcGwM3/F0D5Pa+GhnK90pg9ryAE6pAhcQe/cvSnp9
      TobeuA5710/OvRyuy7HRYVoqqydMg9FclnggOPH/VLhScnRkmIWVVRPlVaoHEShH6Gf+iz95
      pJXaSJRbFy2lIhTmoQN7uXPlagxNQ0nJ6lgZP+3v44c7tiGV5PYly6mJlI45sqXEp+mEDYPk
      d79H3/AIyUKBxr/6SyJVVSAETl8fiXt/Re7VVym7+yNo/hPziAjdR+CWvwPpYO+7H3vPvfjW
      fhRd01imm8TuewTZUMeCwSFS6RQ3+APU3303dlc3hX37idz4Dka+96/0f/krqHwBLRIhdOUV
      IMB9/Zv4Vt5M6L1fJPt/vsHIt74NUhL/8IeIVFSgXBfx7A6S99+P/o//GzSNuM/H0FNPE7rh
      BsS4+TX519Z8xXgKoc+6aTBr+w/QGy6bdnmtbB5y5BjuwH70mmVnde+MVWAgk6YnmeSVrnbS
      hQK3L1mBQpHI59jR08XiqhoaY3FqIlGa4qVDiTOWxXe2vYTtuvzO2vXUR4seH+vVH2Ku/sBJ
      719wHJ5vO0pFKETY5ydjFbBdl+5kguU1dUCxB/j0hs0Y4y+JD61ei7Jtkg89TG7HDtzhEe76
      4z9ioCyO5bo8dGAvd192OQHTRI2bBm/gSokuJWV79zGQTnHfu25hZVkFS6qrJ8qZ9fVU/v5n
      ST30ML1f+DPMxkbi73sv/iXHkyUIIUA3MVtuJP/YX6KWv4fCzvtIPHqE+s/9Pr6FC8F1+dn2
      l7nWcglt2IBcvoLIVVvQwmEq//BzWEeO4I6MInw+cjt2YNRUYdYGCb33TwGo/OzvMfA3f4ub
      SjH8z1+n4rOfxWptJbf9VYyqagqHWgmsWM76bJ7CD/+NtNAIbdzA2M9/WTo79FBfD8oXpqo8
      Pu3x4/nIDp3+5tXo87YQfOc/TPsaOdpG/vEvE7zzu6cdX6OUwnJdLNfh5c4Ojo0O05tMcmPL
      YlbVNfDEkUPoQmNOPE5VOEJPMkHH2Cg9qSS3LlrKWD5HXSTKvPKKiTr7Ukle7GijIRbHcV22
      zGsG1yJ372cI3vm94tjlTbhSMpzN8mzbEXQh2N7dydLKarS+fuzqKqpiMfYN9OHTDW5dvJSl
      1cddfG4iQfKhh9HLyjCbmgDF2E9+StUf/we0mhp+3XqAgXSaumiUttERVtbWUx4MsjxeTvLh
      R+h78imqlyzG9/73MRAKsqCismQPp6TEHR7G7u4h+eCDRG+9FWEa+JcsQXvTPtLZ+z6Hm9Fx
      O14mcMMfEtj0sYlzjnTRhVbSlHorTvdOnIMPE7jhv04cyx84gNB0ZDZLft8+nL4+4nfeidB1
      Rr7/fSo+82mG/vnrPN88l81dveTyeeLXX1/awhkb6mXn/h7ec9e78M+ieCBRNhff5Z84rWu0
      8vkYLTdivfD/4b/686d17cud7ezs7SZk+nCkyyfXbWRnTxeLqqqJ+v3csXzVCeWb4mVsappH
      fzrFrw/upz4W45WuDj51+SYCpklvMsFQNkPY9LG6tp4HDuxhe3cn6/w5tPLmSY1/KJPmgf17
      6EuneEfzItb5A8xNZZj7yg56+npRjkN9OMLiTIbyj3yI6vHGL/N5Ms8+R27bdkKbNhK+/roJ
      29kdHWP4m9/CqKnhnZ/+FL35HAXHYV40Tm93F3uefx7RP0Tv3Dms/+u/pKyqCqFpTPVqE5qG
      UV2NUV30BNmdnchCgdTDj+BbvBj/okW4iQT5wzUEok8TufufsHZ8HziuAMY0Xk5KSezdv8A5
      8hS+dSe2g8DS4rjGTadJ3PsrQhvWY85tQghBYPlyUr/+DaGNG6lZvZwfHjlcHBCLk+wP0N12
      iBdf3su7P3gHgWl2ATPdAyglyf3yU4Q+8P0zuFaRu+czBG77Klqo4qTlMlaBZD5PVTjCgcF+
      9vb3cdeqNejiuJfrdDk4OMBLHcfQNR1HuqQKBW5YuIiVtfU4UvK9bVu5y96JijUSWnYbPckE
      e/r7GM5mGMlmuWvlZcRe3Iq9bRtGVRVC1wmsXYtvw3pUbx9GRTnKshj6P9/AN38+QjcotB4i
      tGED4euvQwuc6Kh443FnnnyK3I4d6JWV2J1dICVaNEpww3qySxcTr6zCf5aJzmQmQ+HIEQr7
      DyB8PqK33waZHkTZXHK/+gOC7/5fCDM0rbqUkhSe+ArO0WdB2oQ+/gBaqLx0WSmLmSHGn5fd
      08vIt79N+Sc+jjF/PulCMUSmP50qrQC7X32KPbvTvPcT7yI0WxTAscg98IeE3v/tM7q+cOw5
      nP0PEbr170uaQgcHB3i+7ShB0ySRz1EeDHHHilUEjKlmQqZHXypJwXVojJUhAO1ND6e7az/O
      03/Pc0s+iyUMdE1jfWMTtZEoY12dlG99Bd00ib7rXWjRyEmV0E2nsY+1gQCjtnbibXwylFI4
      /f3IdAazqQmhCTDOfFHM6ZL77X/Ft+4T00qqpZSEQorco/8Z/5Y/we17Hd/K95/W/d46xnmD
      SSpu5TK4yo9jjs2uYDhpFf36p0Ein+P5tqP4dIPDw4Ll/YMsPvISRsMaEvkcqUKBvlSK7mSC
      oGny0TXFAaFUCsGJb3ylFPmdO3EGBom+yS03FSqfRARi1EVLvxhUIUX5q9/A/44/5aN1q4r+
      baWQiQTJ++4n3ttHYNNGQldeMWHCnAw9EkFfNf006kIIzLq6aZc/15iLbsHeex/6tcWBrJLu
      pBeTkhLr5W/i9uwkcONfI/xx9KqWM0oYcDLFntSiBIqxsSSRSOgUuUHPM1IiTlMBnj56mMZ4
      Gbv7enj/ysuwqz9L70vfoXWln4pwcRfM+eUVXDV/AZHxyRag5EAv88yz5PfuxR0eJnLTjSAE
      dlc37tAQgdWrEIaBm0xitbURWLYMlEXmx+9Hr1mO/7ovnbDG1x1qxXrl26jMMOaqu9CqlyPT
      abRgkOSDD5Hfs5fI9ddR9pEPI87D7PqFQJ+7GWvXT3D79iBiDeR+8btodSsJXP9fkMOtiLK5
      oCRy6BBoOoWt/4JxihQtZ8KkFpVJDJEsQGX57ArIUqc5CVZwHAbSad69bAXrGuYUG3VkI5WH
      H2DxK1/EaLkB/3V/Pm2lyu/eQ9ndHybx818w8Hd/D1Kil5ejV1aSfPBBhM+POzqKb1ELqYcf
      If7ed4BRjZsGd2AfIlqH09uLMAWFx/4C/zV/Su61VmR3gNF7vwYKZC5H+JqrqfnSFxGXeKJh
      oZsErvtz8k98Ba1y4Xj+IYW9+5dYu36CufqDaPE56PO2IMwA9p57MJb9zbmXo9QYACAzOoZZ
      Fsc3C8YATsdWVCGJc/hxgu/86inL5x2b+/ftYU19I0uqa044p6TE7d2Jc/gJjPlXY8y7ohjI
      NzKC8Pmxjh3FGRjE6e0FXcfu7EILh7A7Oqn98l8hAgGQEuU4iDcCusb/V5aFFomQ27adwuvP
      ojmvoajF8B3AzfiwB8bwVQusZDOumod/6VL08jJCGzagRSKoQgEtNL1B4aWCyo1hH3gIEWtA
      pfoovPjP+K/6PNarP8BseQfGktvQKheiciMzkiqy5Gum61grh4520Lx0Fc2NNaWKnFfyj/0l
      wh/Ft/Hfn7SMlJLuVJKDg/0cHRlhw5wmFldNHggKTcNovBytbB75X38RmbFI/GYH7tAwemUF
      vpYWjIoKQps3o2yL+PvuQCaT5HbvQfj9RTtd05B9OxC+cPHhZIYmFmSo3Chm0waI70FvuhK9
      aSPOkWcJrngvWGm0yoVIS6JsG6P8RC+GeJs1fgARLMO39ncAcNpfwlhwPb7VH0ALV+G0PYdW
      1VJM0zJDeVJL9gAHXt/B0fYB6pvnsnbl9OLpZ7IHSH/zalCK8Kd/O8ltppRi30A/L3W0UROJ
      sKy6lqaysim9N0pK3NFRCq+9ROGFr2M2leNfeydavAF9zjpwHVR2pDgj7o8Wk3DlRlBOATl8
      GLf7VbSyecV1yaNtxTXImUF8K+9EuRZu1zaMRTcX05trBih50S1yvxAopUC6CN2YcNfOtFeq
      ZA9QXl5OlaWxasXZhQ+cC4qLRLKgaSBOFLc7meDxwwepDkf44Ko1xAKTg/OUUrjDwzgDAxQO
      tWJ3dyPHEmhlccz6emJ/8H/RguC2vYDbvR3rtZ8Uf3RfdDyH/igiWFFcRaT70OvX4Fv7MfCF
      J7w2b31I5uK3eImE1/inQzFswjj++TxQUgGkUuTSmdnhBXIKoCTKCNORGMNGMJjJ0J9OkbUs
      bq5tIPDMc1iPPkGyuRl3bAxncAiVywGgXAe9rAyjrg5/y0Ii112LCAYnBW5py4sLZ073zXO+
      HpTHzDBJAZIDnezcd5jR4dQpE2Md3LcbI1TGwvlnnsfy6MgwPWMjhJNHiRsaCUdRsAuEDZ24
      JvGnOlEyRK+1gKNPP4PR1091NEpLIklVIolmmvhvuB7fTTdid/cQWLECvaoKLRiYWAhzOh4V
      r0G/vZjUMsLltTTPGUFT+il7gEAkhpLuxAZ5hUJhYtmaruvT+jyWy1LlN2jOtoJSNLoF0Eyw
      NPCF0SoayF37P5i/7yjNtsJcuw7lumh1daiqKoTPh6brWFLC4kVITcOREmwbTdOQUoJlHf8M
      Z/RZKYVSyvtc4vMbL41z/dl1XXRdLy4WkvL4wqFz+flkbtDpMDzQixEqIx4JnpdoUA+Pc81Z
      zbZU1lzYRKgeHmfLhAKkUqmzSiibGx90enhcTEwoQDR69um4PRPI42KjpKNHqeKg9mJNMe7h
      MV1KKsBr27aybduui2KbVA+Ps6GkApTFQrR1ntsMvx4es5GSCjA0kiIeMGbtNqkeHueKEgpg
      YWgGaUvOqpxAHh4zwSQFyI4lSVo2dTWVpcp7eFxSXJrr7Tw8pskkBQiVxaiMeP58j7cHkxRg
      pKuD57ZvY3C49PbyHh6XEiV6gEpWLV+K3/QWcXhc+kxy9EjHwfQHqauLzaKkiB4eM8MkBQiV
      VdNYm6Gyfo7nBvW45CnpBUoOtvPTnzx40p3iB/u62bO/ld7uDjq7+2ZQPA+PmaX0S97UsZKZ
      k+4PYBgmjQ11tB/cTV3LKqSUE6vCPDwuJiYpQD4xSFd/lnffffLM0Pl8jnzWYcmqtTiOg9A0
      NE3DuMSzmXlcekx2g/b0IU3Fc489h3WScOj6OfNonttAMBgkGo16g2WPi5ZJr+yq+c20+ELQ
      pOM5Qj0udSYpgKabdBw9TDplUb9gHm+/ZH0ebycmmUCGz8+KZQsIlFfjL3WFh8clROn1AMP9
      HN3d6q0H8LjkKb1TvBll+drF3hjA45JnkgLkksMcOtaFQM26fYI9PM41kwbBwViM1PAIAnN2
      JMf18JhBSphAJusuX43p93smkMclT8kxgOkzcKVnAHlc+pRUgFQyjVvI455vaTw8zjMlFaCm
      phItEOLst4j28JjdlFSArs5udJTXA3hc8pRUAE1ALpf33KAelzyTFCDZ20FF4zykbno5Uzwu
      eSa1cd3U2X2gnZUtc7wewOOSp+QWSfl8nrHRMWrraqe9aZy3RZLHxUhJK+fg7p089uvHOdme
      L6PDfQyNpBkbG2VgYHAGxfPwmFlKrmH0+VwCvoqTXlReWUFvb4qOtj00rdjkrQn2uGgpqQDx
      8lpsY4jJ+64XGezrZyRhsWDZagr5FCJW7a0J9rgoKdliB/uHcLNp8lByRVh1XRPVdTMrmIfH
      +aD0DjHlEcLxSi8xlsclzyQFUNJF6kGEnfPcoB6XPJMUYOjIPkRZIy0Lmrz1AOzFAyUAACAA
      SURBVB6XPJMUoGrBUkYOv46MxE86CPbwuFSYpABCN2moryXg83kmkMclT+n1AKPD7H5tj5cV
      wuOSp6QCRMsriEdCXspDj0uekgowNtJDetT21gN4XPJMTouSGqW9s5+9hw944dAelzyT5rp0
      3cAfjHHVtZu9rBAelyRKKeTgQey9905WACuXwQhEMHXT8wJdpMjsKCrRiVa3atrh7G8HlFKo
      ZDfWqz9AZUcwl7+n9HoAgFwqhRGJYHrrAc47Kp9EJrsRwTKELwK6H3RzojErJcHKIBPdqNwI
      wh9Dq1oEug/Zt5vCC/+E8EfQ527GXP1BhDh9Y1a5NnKsHefwk6hkNyJaj7n6Awh/FACh+87p
      dz5blGsjE13Yr/8/jLlXoM+/CqHpbzpvYe38MbLnNczVH0CfdyVCaKUVoLfzKAcOHmPhqrXM
      rT15WPSb8RTg7JFjHRSe+RpKuWjxOajcGMrOglMoFjD8IF1wC2AE0eKNiFAVKjOIygwionWo
      Qhr/5s8ionVYL/wTMt2P3rAWEYij1yxDROsRxvG830opsHPI0aO4/ftRiU5kegCVG0EL12As
      vgURb0SOHMPa/n2EGQAFeu0K9KaN6PWrJ5RCuRZoxhkp3OmgpANWFuXkUKk+nCNP4fbtBqFh
      NF+DHG1DFZKIQBxVSINrobIj6M3X4Fv3MYR+PN9JSQXYs2Mb7d3DVDc1sHHN6mkJ5SnA2eGO
      tlF48m/xX/cl9MqFk84r1y4qgtDADE4ybdyeXSjpoDeuO6EBytE23MGDqOwwbt8eVHYYESxH
      hCpACFSyF2Vl0Cqa0evXoMXqi0oSrprUkIsN3ARp4/bvxW17Abd3FwDCH0PlE2jxJvzX/hnC
      d+52llBKIUePYW37HiqfBDsLrg2ajlY+D735Gow5GxH+yHh5iRxtB7dQ7EGNICIQO6Hhv0FJ
      BejvPMr21w9z02034fNMoBlFSRe34yWsHT/Cf92fo1csmPH7qXQ/Kj8GimJDD1ef1VhBuXZR
      sSI1OPsfxN7/ICJcjRatQ0Tr0CoXoVcvQfjCU9dj55GJzuLbvJAsHrOyyOHDAOjrP4WKNSJ0
      E2EEkEphaBq6duY9TkkF6Gk/TGvbAFdcc4WnAOcIpSRIh6JnQaJyY7gdW7EP/QYtNgffFb+P
      Fqo8RR2KrG0xkEljaBpxfxBd0xACTE2faAiulNiui6FrmJp+1gNh6bpYrsNIPs/RoUH60yl8
      honQBBGfn3ggQNA0CZs+fIaBISA92o0z1omRH0UbPYp/aB9+XwgzUoVRtQitegnCX2wvMtmN
      ffC3yNFuZKCWfM0KDtmCweEhAnqARLCWlL8MV0q0TBY9n8fVdfTycly/Dz0QQGg6rpJEfX4i
      fj+NsThlwSDHRkaoj8aYX16B5brEAydGuE1SgNGeozz09Cv4fBE+cOftaCV+PMcu4EgN09BQ
      SmEYxnlVAOVaqOwwysrAG/PVrgUIhD8MZhhh+MAIILSio0sphaskUilcqbBcB0dKDE1DCIHt
      uuhCQ9MEjiuxHIusbRMxTQSyGCbuOLgoHOmiFFj5FPHCIMJKUxA+fJpAFwJbCYIqTzDTixw+
      SiHRRz6XxpUSIRUSGHUMtOqVhOZfhS9chyzkQUp0VyIKBcx0BpXLkcvnUK7EzucYSSVJZnPk
      bAuhFAiBZprYfh+EQuDzoSkIpFKExxKYhoHf50MPh9FDIYxwGD0aRTNNhGlimiYCkLkcwrLx
      WxZOIY+dL0A6jZXL4bdtsG0KjkM6n8c0TVAKqSS2LCZPS+kaadNAahqOYeDoGppSKARKCEBh
      IAi6WaK5BI2ZTkJGBi2oIQwDRRQnX4GIzkELRbCsAtlUkki8DF8gOP7ykMXvGwqhhSMo18Ed
      GkIVLKx8DmmaGEBe00goyVAuC1IRCIcZM3RcTeDL5ZkfDBELhjCjUcxQqEQPoBSDfd20Huli
      /ZZNJXuAY0dasVwNXeUJxGpprKskmUwSiUR4ozohxLQ+y/YXULnhqVu8lUEVUqjMEDKbwOk8
      hN2fQI6PDQUKpUSxS9clml8gQn70SAAtFAEUjl0gi44L5IROXko0JGh68SEphaEUStMwpYUh
      JQgQQi8qhm5imCaMl5W5AqYjUWkD5WgIHVCgUGgaSEfDzfmRlp88IWzdj26YaEIgNA1fIIAZ
      CgECLeBHmCZoGsI0EX4/elkZWjiEMAzQdTTDBNMETRTf6IaJchxwHGQ+h5tIguOAAL2iErOh
      HqREuS4qm8VNZ5D5HCqTQdkOyrbBLc71i1AIze9HhEIInw8t4EcLhxF+P1okUpRtvG3w5vbg
      Fl8KKpNBZrOgFCqfR1k2Sojiq0lKlKDokREgQuGiAhoGIuBH+Me/e4l2ppSaXu8lJcq2UVKC
      4xRlcF2EYRZ/m1QKbActGkEEg+C6qGwOO5M+uRt0KtqOHsGWAjefJFLVRENNOclkknA4fNoK
      QNfLkJ1aAZTUUI6OtA2Uq6FsE4QOetHNJXQNdB2hG8W0dkIgjOJDE5oE3SjajT4NfH6EIUCA
      0ozitUKgAKFpxbcWGkIYRcUQYtrfxftc4vlyYkOe6vNbr3/j/EzKeUYKYOWzWFIj4DOQUmL6
      fKS8MYDHRcjETLBtTz/4Wegmfv24hjq2jeu6p1WHh8dsYEIBzjanj+u6Xl4gj4uOCQUIBoMA
      OFaeoZExQKOmtnqSF6i3q43hlMWKpYs4fGAvsepGqiviFAqFoofAw+MiYlIwnHRddm57Baug
      uPHO9/DWqQtH6cTCfhRgmibJZJLaqnIvMdYliislY/kclaGpJ7EuViZNofmCYdavWYYZryRY
      4oKKeBj0APlcDn/AT7ys7DyI6XGh6Bgb5cc7t19oMWaMkq/svsFu2va0U7hxyyQlCMcqCI87
      e0Kh+TMrnccFJ1kokLVtXCnPKuRgtlJSAcKhSlas83uZ4TxIWwUKroMt3UtSAUruFL//cDuG
      oXsLYjxwpCz+uZdmmrSSO8VnRsZAeTvFexTRhcBRl2ZrKLlT/Nr1qwhEwp4J5AGA3zAoXKJz
      PKV3idQ0HMv2egAPXCkJm763lwIU8gWk4ymARzG61W+Yby8FKK8owwyFS+4UPzrUR+uxDpSC
      fGqUzj5vj7BLnbDPR8a2LrQYM0JJM7+3pxdNCVyYlBsok3cImgKFoqOnH3QdKSu9PcIuUZRU
      BA2DVD4/9fNVLs6rP0Bf+A5E+fzzJt/ZUlIBXFcSDIZL5gYNmILhlE0+lyUei5LK2Wia5oVC
      XKIITRD1B8g59pTP1+l+Hdm9HTV6jOA7/+E8Snh2TDKB7GyCmoZGWo91lFSAqtpGlrQ0EwqF
      qa1vpGXB/JmX0uOC4UpJPBAgY00d6i4HD2IsvgWVT5wnyc4NkxQg0dfNizv2snThPC5Nq8/j
      dFCq6Aa13KnNWzl8GL1+NbiF4hrei4RJfVpl8zI+OG8JruuWHAR7vP0wdR1rfP2wUgp7332Q
      G8W8/HdRY+24A/uRo21o8SYwQ2BlYTxHzxu4va9j7fgRxsLrMZfefiG+RkkmKUA+NcpvHnsa
      Q/PxjjtuL7lNqsfbC1PTceS4AuRGcFofQ5ghtI6tWDt+hBw9hm/NRxFmsJggKzsEygV/FCGK
      mUOs7f+KufajWK98B2PxrSekLbyQTDKBgrEKLlsyh6GM7fUAHgAYuoYji2aNHD6KXrMc3+Wf
      IP/E32CuuIPQnd/FXP2BYtmWd5B/7K/J/OTD2HvvA0AlukC66I2Xo5XNw+3ZecG+y1spOaxP
      FzLkBhI44CnB2xyFwhh/i0ulkIP70WqWo9etIvzxexHGiYmmjIU3IPxRhBmksPVf8K18P/ae
      X2Je9iGE0DBX3IG9516MOesv0Dc6kRIKoCivWsDt756HBti5JK/s2A3Amo1XEja9dNtvJ5zx
      dQC6puFKiRw5hjnvSoBJjR+K6UaMpo3Ff1wLmRnE7duDb9PvAaBVLECOHkO51qzIMF1iJthh
      +/NP8+unX0QAZjBGZSxAbmyErOMFSL9dEQikksjMIFqoalrXGItuwXr5W4hYA8IsjiaFGcRY
      cB3O/odnUNrpUzIadOGKxRj547FAfn+AQj4NwOhQP4fHQyG62o/S1euFQrwdMDQNJzdW9IsG
      ppf/yVxyKyo9iG/lnSceX/5e7IOPoOzcTIh6WpQcA0SCMZasWTYRBhGLxdFCFcR9goFhm8B4
      KEQoGGQ4k0NK6YVCXKIopXBdF01AYeAQwYoFuK6E6YRK6kHM2/4nirek3THCaAtuoLD7HoxV
      HyymfL9AlFQAyyqcMO091N+JLxTGkeA3BCNpm3wuRzqTxjTCXijEJY3AMAwMTUdmhtBjDefk
      Oesr7yD3wH9Aahq+NXeXLKOUouA4BEyTZD6P3zDwn+M2VqI2C8fWsO0CiuIguL0/iSk0bAnV
      dY1Uj5ec27zonArjMftwlUQXAp+uU0j0I6rnn5N6hRkk+K7/Re6hz2PMvQKtonlSme5kgh+8
      +go3L1rCc21HaSor54Or1pyT+79Bib7HhzA0qqOhohs0GGPpwrk4joX0xsBvS1R2GDPRTmGs
      Gy1ae87qFf4o5vL3kn/yb7FbH+OtaWoPDw9xw8JFPHJoP+9bsYpEPoc8/VS2U1KyPzE1Rd9Q
      kjd0MpfLESmrwD87Ju88Zhh73/3oTZsQkWJjzz/131iYGsT2RxCxhnN6L3PZuzAWXk/+yb8D
      pTAX33xcDtfl6vkLqIlEWVBRxbauTkayGarCkSlqPD1KKkA0GqJ9IDUxCRYOhejqH/V6gEsY
      t283bs9OVD6J27sLa/cvEb4IzTkIOAnKFl+NObgXcYpdbM4E4QsTuP5L5B78E4yWGxCaUZxz
      QKFrGi2VRbfrvLJyOhJjM68Aff2d7N9+mC3XbyEEhKNx3PRu0rYi4vMmwi41lFOg8OLXizuw
      VCwgeMc3AA1lpSjsepxgeZwD/mYqF7yLRTPksRH+KFrVItz+veh1q8naNulC4YQy88oqeKmz
      jXUNc87oHoOZNI4rqX9TGv9JCpAZG0IE67nx3Q0EANcu0D8wgB6toczvNf5LEXvXTzDmb8Fc
      89HxDUGKjVwEy+mILmZBUwvG6DDJGd5021x2Owef/Q5tq3+Plspqwr4TZ4orQiFGc9lp7Rwj
      lTohsbNUil/ueQ1D0/j0+s0T10/OCxQtRy8c5PmXjrJg6RJM5ZIZbENEl5RcIONx8eP27cZ/
      /X+ZMkLT1HWyM7z/g6paSjA3RE//MToTY9y8aOkJ5/2GganpDGUzlAdDGG/KVNeTTPB8+1E0
      BPFgkPbREX5nzXoC4xnLk/k8ZYEgUklGc1kqxpP9TurPCpkk0bqFfOYzv0NACKRrkxMx9Pww
      l2hysLc1SjqofAIRnDrJsU8/9aKYs2VXbw/H6q/hfRzhnYuX0lToQeXGTiizZV4z33/1FX61
      93WGsxkAMpbFr/btZsOcuWyaOx9XSkDw+JFDE56ltrERmuJlNJdX0pk4XmeJcOhy7EQ7j9z3
      NDmlMINx5jU1sGjJMvwG9HV3sPdAK0opujuOcbS9awZ/Eo+ZRuVGEYH4KePz/YZOwXHP+D5H
      hod46mgrWWvyOkPbdXmh/Ri7ervZcs3HCQ7uoXbv/8V6/h8pvPzNE8ourKziC5evorntAX6+
      7Rn6UikODg2wtr6R5vJKmuJl3Lp4GZ9av4nRXI5EPo9Uil093ayqq6chFqcnmZyob5IJpJQk
      EqtAmhnesMACPp1t27dxzU03Y0sxsT9AIBAgHIh5oRCzGgVOAWvHjzCXvRsRrT/hrEz2Q7jm
      pM9OSYkrXQyhkbetM37GTx5pZUl1DQ8f3Mf7lq084VzH2Ci7+3q4ceFidN1Eu+7PsZ/5Kr53
      fg3r8b8kv//XGAtvAE1HjhzFfvarrGpcS0Xrj3kqXoumCa6a2zxJtsWVVRwY6GNhZRU+XSds
      mIiAoj+dmig7SQFyyVEOHe5AUdzPVgcGh8foObaHrH0TZdEQwymLfC5HIpEgoEzKYmEvFOIC
      IkfbAIFWPm/SOWv797H23IMx/yqsX3+B0J3fmdigGsBOdqKXzTnps5OA3zAxdYO8657RMx7K
      pAmYBlfNX8B3t20lYRUImT5MXSdnW7zU1c67l66gMT5uhlUuwHz/N7Ha2tCXfRqGnsV66Ffo
      datwO7cRuPrz6A1rqO3fB/kxcmaUhnjZpIFxbTTGgcF+jo2OsLCyCsMwiOg6jpRYUhLy+SYr
      QCheSTjgI5NMki5YRJwE7b3DbL7pLqpDGiJUSXRczgVvGaR4XBjc7h0oaeN7iwLIsU6crlcI
      feAHaOEqCi/8E27/Poy5m1HSofDUf8MdPEDghv960rqVUiDAEBqOO30TqOA4uOONbFtXJ1fO
      bUYTgsvqG/jpazvw6QZqPP/4dc0txxv/G9e3tpJ84EFUvkD8Ix/Cv/R23K5X8d/4V+iVCwEw
      qhZxV60Pbd76kl6h8mCQvlSK/nSK9y5bBYAmBGvqG3i27Qi3LFpaeh6gujzG3qM95JMZfKRR
      RoDD+3bQPH8uYW8eYNahXBuc/KTj9r778a35HbRwcSJJq1mGHDwIczejEl2o3Ahmy41olS2n
      vIep61hy+grwyMF9dCbG+N3LN9KdTHDTosUAbGqax6amyT3VCd9HKVIPP0LZR+9GaBrD3/wW
      eixGcP16zFULAHDTaShbg3vsGczmq0vWEw8EqQyFqAyFKQse3+rl8sYm/m3XdvrSqdIKMDyW
      piYWp6y6nKCo4LYbF0z7i3tcAKSNsrMnHFJK4fbtxrf+300c06sWUTj2bDHK8sWvozdejm/t
      70zrFj5dp+A40/LB267LYCbNxjlz+fnuXTSVlWFMYxG8UgpsBzeTRuZyGDU1CE2j+j99Hmd4
      mOT9DyD8foKXr2Ps336M1d5ObF0/Kjd2Ui/Wu98y3oDiqrVbFi3l/72+s7QC1DdUkrYCXnr0
      iwXpgHPirKnKDiEMP8J3PK+HiDehUn2ozAAqnyhOfE0TXdPQhYarFMYpFGAsn6M8GGJj0zzm
      lVVQHZle6ILd1cXQP/4TWiBA2Yc/hBj382vhML5wmPJPfoKBv/8Hslu3YlRVESwrw8m8gnPs
      GYzFt6Iyg4hIHUI/dcutjUT53OarSrRxpUgkxjja2sXmq9dNS3CPC4tyHZSVOf6/klgvfxt9
      wbUnlBOajt60EWvb99Cql5zyTQ4gUWjjU6CmrmG77gkTUCfIMe5zbx8t+tw1IU4IOzgV2Rde
      pPyTHyewZAnCN3m9sB6NUvNfvkTu1R2Er9qCMzTE6L8ewtf+EoXtP0OLVaJXteC74o+QmQxa
      OIzQT97z6Jo2eR5g6NhBjg2MsuGaq72MEBcL0sLt33PcDLKyyLEOzOV3TCpqrroLOXgQc9FN
      06tbwRshAAHD5MjIED/fvYtjI8MAvNRxjN+2HuDYyDA/372LRw7uY2dvNytq607rK7ijYxQO
      tZ608b+BHokQufYahK5j1taC8qG1fIrU7ias7JW4AwcY/sevMPx/vsHIt76NkiefvVWuO7kH
      8EVihP1h+jsOs7ilxlOCiwHpIvt2I1N96BULUIUkIlRZcnJLC5YT+uAPz+g2LZVVPHb4INfO
      b+G3rQd534rV7Bvo57L6Rl7qaGNT0zyytsWqugai/skZI6DYS+R37SLzwosEL7uM4OXrsDo6
      SPzs55R99CNTNv5ShK66kpFvf4eqP/kTEj//OXaunNCCYwhNJz+4mPRvHyN01RYyzz2P09WF
      f9kyguvWkXr0UezOzskKEKtpYLFlURDBkmMAJWXRDtR1pOsiNG1aXanHzKFcGzQTxnsAOXxk
      RsKWL29s4vLGJqAYmPbA/t0sqaphfWMT68ePnwq7vZ30U89Q9uEPktuxk8Gv/U+E30fV5/8j
      +mmYS28QvvpqwldeiTAMKv/oD8F1ET4f7tAh1JP/QP5ImNzOnYS2bCF8ww3kd++m/8tfIXTl
      FURve2fpcW5qbJjXD/VR977b8L/lXFfHMUYzFquWL6X/6AF8TcuoGC/01hU9HucJ10ZvvgaV
      TxXTEO74Eb4t//GMn8ebrJ6JA2+ta15ZOZ9av7l4err3cV2SDz5M/P3vw6ivJ3p7PdHbbzt+
      mzNtP7pevFbTQCsm8dIqF2Gueh/GWAe+zV+cKOpb0Ezs3e8qluVkWSFicYTsLrlNqhQ64aAf
      qRTxsjhp6aJUUQA5hb3lMXMo10EEy3FGjqHic0EzEFVLpn4ebzQ2IRjOZhjN5QiaJls72rCl
      y00tS6gMhZFKoZQ8q2frplIk7/0V9rE2wldsRm+ac17ait5yM4VH/pTC6/dgLH83QntTcx+/
      f0kFGOhvIzFYoNS0R0NdDYmsjWUVSNoKMkm0UCVCCPQpRtweM4dQDiLeiPXiPyFbf4v/mi+g
      TxGyoJQi8ct7cAcHiX70bu7ZvwdXSQKGwcameehC41f797BpzjwytoVpGCc828LhI7iJBMF1
      a0uav0opnP5+tECA3I4dZLe+QuSWmwn9u9+dke9/UnSd4Dv/G9bOH2Pd+2nMyz6MsehmhH58
      ZDs5O3R6jExeQ4Sh1HDE9IeoGjd5gg3Ts/s8ZhblFDCbrx3PunY9WrxxyvJOTw/WwUP4li6h
      78/+nKUfvxuzsZG467KyqgZhGJi6TufYKNcvaCFkHm8JynFI3ncfMpNBZjJErrm6aHYdOUrq
      0UfRI5HiOHFsDFwX//LlVH/h86c9uD1XCF8Y/6bfQ639GNaun5C75zOI+Bx8l30IvW7VZAUw
      TB+uq5gzp8FbAHOxYKXRonXo05jVVUox8q/fp/yTn0TW1/FCwGTNiy8TWbiQ3M5dDMVjVP3x
      f2BxVTWLq6onXZv67WP4Fi0ieustDH71axT27cMdGUGLxYh/4C7stnaE30fgsstmlXNE+EL4
      N34ate5jyFQv1vP/GxGsmKwA2bFhCsog4DNKjgE8ZhdKyaL/3zwe6yKV4tcH9/OOlkUEjBMd
      2e7oKMLnw9c0h8PDQ9gLmokFIwilqP2rvyDz7HMM/PevEtq8mcg7bqBw4CDZrVuLFzsOaBrl
      H/8YwjSp/tMv4A4No8Vj6NEoQNE3P4sRhh+9fD6B2/8ncqi1hBu0tokba5tIDQ55+wRfDBRS
      CDN8gl3bOjTI1s421jXOoT56/LhSipHvfJfQpk0AHBjsZ019I9HlqybKRG64nsCay0g+8CAD
      f/f3GBUVRN/5TlAKZVv4WlomZle1QABtztTm1mxFaAZ6zbLSg+C21n0cae+lqWUJi+ef2Qp8
      j/ODTPUhIjUnHHutr4drm1t45thhPrhqLcJ1QddxBwfRAkEi1xVDJBL5PJXja2PfjFFRQcUn
      P4HM5xE+30RMzqVISQVwbAer4GJZk0NsPWYXKjuMCFejlOL1vh5W1NaRLhS4c8VqHt2/h4d/
      9EOW7thFxbJl/P/tnclzG1kZwH/dLam1b20tjmwpcWI7cZyEqVQBYaA4cJgLw1yp4sA/Ahf+
      Fc5AUVNFFTcOM9QUMECKLJPFa2JLsrW2lpZ6exxkK7sjeZx4PNO/U5e6+uvvvaevn/rbJAZD
      Qj/4PqZj88X2FrV+7415PTB6wn/beUNjrBjx5IDlxYvvWx+PKXHbT5Dj5xhYJp9//hmPl5Yo
      1up0/vBHbn71AN/8HH/79a9w9vaICYjkZti8/R8WZzL8pHThxJvNnjVeO3pXCITrvvYlWAgx
      irTJ8iiYIUkv9F/xeH8Ix8Ta+Izq4CrS73/HJ7ZD9bMvKC4tod76IfFffIysqnziOtyrVgn5
      /diuw1wyxYVU+hvlpTktXjGA5u46f//3XYyeya3XXPB0a51G1+T61cs8vH8HJZTg0oUi4KVC
      vA9Ebx+neg8AZ/dLtm5XcBo+Lv/2N/hSKWYt6wWfuxACRZK5lp99VZa3Xq8aQGr2AjdXTda3
      9nCAl2O7rqQQi6ijP1COxEC4o8ifbWOa5jjEPd4hvOOpj5/fZV8+lnpNpNYmAEr6Ehd/+XOI
      RLHDYZyDliNiMBg/3Z+v4Dprx47jjCPQ7+w+YsrHgDXo0epbREMqptHFF04QCQbQdZ34MbL5
      PDxOk/EOMKkd+J5LhQgeeAkOr/W2VI+zxtgAut3u1xJkGMYbX6pc10U+wt12VKH124qwj5L9
      tmuPOn8WdX5X1x4+2I5736M47fUbG0DsIJR9XIQQb5TxNmW+Du9K9lnU+W1f1G+aXDj99Ttx
      J/BosiQk6ZmVPVNE4Lqjzw7PTTqpzy/CqFmThARj2Ycvi4fyplmsl2Uf6jX+aQdIh/c8plzX
      dcdy36XOL58fMVqPk5L7fMHMic7zaIqPKVcCDudTfu137nVyT9gAHO7eecDK6goSo0a6hi2R
      0xI0OwMK+TTrjx7TH9jgmhSvfI9kcLIagnazgm74KRY0vvznP1i9foNKdY98LkvfGKAIi7Xt
      MtGgD0dWubI0eRBv48FX5BYWiQR8VCq7JJMzGPUyTjIPnRqVZgfZHhJKZFgoTZ770tNb7Le6
      lPIp7jzaQg2GSUX8NJotEtk5wrLF+naZcNCHO6XO+9triNQ5cvEwlUoFHItIUqNVrzE7N0+j
      ukOtbaBKQ85dvEZ4wuLuJxuPiWfniauCf91+yPWVBfaaXTKpGKYNZr9Nud4hprpkCstEQ5PX
      gOxsrRHWzpGOhalUyiSTaaxum54cIOAMeFJtkor5SKZLJOIv1yK+CZeN+/fILa3SLm/S0nvM
      5AsYvQ7Nep2V1WuUn2wwFD6s4ZCrKy92MzzZvUfIaFoCEDiWQafdpbK1zlqlieTaCAmUQJjs
      TJJ8Jo1pT55ul0il8UmCoV5jaJo8frCJ32dz9+EmgXAUBMyXSgSCYVT/dMNKaxoIges6mFaP
      8k6Z3XJtNCRJolScJxJLIYnpGsNG4klUv4JrW8S1HD4M9L5LMp4glYwjDnRWj6FzKq0hMdrq
      LXNIs1Hn3v/uoKDQGY5SWIqlIpqmTeWcSKc1JAS1Shlz0GX76T6u3Wd9i+cmQgAAAklJREFU
      u0wkMuoxVCqVSKenkzvWWXAwzwaV3Qo7u1VgtMueL5VGazFNHrKQ0GbSCCGwHEEhn2F7cwst
      m2cmk8Hvk5CVAKVikVQy9orOJ7sDCJt+r09L72H1dRaWFwnF4qSzWfyyhOQKHNtE1fIY3S6z
      kclv39hvMLQcUDPc+vDH6HtlqobN6nKBQMBHG0G71SKXjuPI0+WwdPtdFKFgKQ4z2Qvo9SqZ
      7DJqKEBTd2m1u8SjQUKJ6QrN9WaN/sBEys8S6ZQJz12i36qhRqJ09Q6+A52zx9C50ekyFEP6
      YkBCy6EGAhTOxwgHVSRFoXbQ38k1DIJym4h2dP//sc4dHeF30LIFPiwUqezsYPlCLM4m8Smj
      WESr3UKxDRTHTyycnnw+dB1HCaE4BumZOfrtGlpmgWAoiN4waLZaqJKF8Lsk4pPOh6DdM1CV
      NnNzBXYrDT64cYXKXoOg6seyBY5r02zWMXp99N6ARPRZ6vjUcYCjBufFATzOGt/ePFcPjwn4
      bqcCepwak8QWnjG5F2taPAPwOBX++umfcX1hrl9fBlklFg2DpOAYbQxH4S+f/ombNy6z2xhS
      WriELAT13XUWVj6g126xuHTpRLKQPQPwOBUSWg532OPR2jr1VpeQ0+fqjz5i+9EawnVYuXaD
      REQmmprl/oN7tBs1MnPL9PYe8t8Nndz8eZKT+naPwDMAj1OhMKvhiy4jmx0cJcjWxgbFXJKE
      cpEBIcKqjB+b9Z0GH/3sp2w+rTKbSdM3XVaVfSLqyfSg8rxAHt9p/g/eKHLi/D4jKgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stringency to Death by Response over Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3ic1Zmwf7/TRzOjUe/uNrbcwBhjAwZDSJyFgIEECIEEWAgfYSkJpPxC
      2IWQQNbZhI9kAzgE8kEIBEgIJUBC7+CCe8OyepdGo+n1bef3h2xhYTXLmtEYz31dvixp3jnn
      Gek8pzznKZIQQpAly1GKYaIF+CxZfcySTjJOASKRyESLkOUoIuMUIEuWdJJVgCxHNVkFyHJU
      Y4LMOngKITJKniyfb0z7v8iEw6cQgmg0iq7rEy1KlqMEKR33ADs2byCmmll84qJPNe4AOtua
      UY12JpWXEA6HcblcqRYpSxYgTWeAHLuVWDwx5OvBYJBQMJgOUbIMgta9a6JFmDDSogC9viCx
      YABtiNfLysrIyclJhyhZPoMQOvLmPyMSoYkWZUJIuQIIXaWstIScgkLMQzyTV1jCtMmVqRZl
      VOi6zp49e4hGoxMtSnqQY6h1b6I2vT/RkkwIKVeAsK+bD9d+TN2eOpRUdzYO/Pa3v+W2225j
      5cqVrF69+nN/INejHtCSyOt+j9DViRYn7aRcASSDicopU6iunpnxlw4bNmzgpZde4vHHH+e1
      116jo6ODCy+8kEcffZRYLDbR4o0reqgToSbQGt8DoaMHmkH+9DP2maM/38oPDGqUGVccbjcF
      TheBeGbP/36/n1tuuYWnnnoKu90O9K0GHo+HBx98kJUrV/L8889TVFQ0wZIePkII5A0PIjQF
      tfb1fT/U0UPtGG25CCFQ698CNYl5ztkTK2yKSfmk7G1tYt32nWhaZs8mDzzwANdffz1VVVX9
      P5MkidLSUm6//XYuu+wyXnnllQmUcPzQe/ag7HoedfcLoHw66+uePQCIUAfKtqfRffXoke6J
      EjMtpFwB8ssnc1z1dHz+AFKqOxsjgUCAN954g6997WtDPnP22Wfz8MMPc+2116Iomb2aDYcQ
      AmXrkzDIfl/z1aOHu0l+9Dt0fwPy1ieRN/1pAqRMH6k/BPf2EE5olBQXprqrMfP666+zcuVK
      LBbLkM9MmTKFN954g0gkwrZt29Io3fgiEgGUmn8O+prurUXe8CDqnpcQMR8kQ+hdOxCaglL7
      Gmrz2s+dm0paboK7OjspLSsDSRpxFUj3TbAsy1xwwQU89NBDVFRUjPh8Y2Mj119/Pc8///yw
      CpOJ6BEPytYnkT9+aPAHJAOYc0Ae6BYj5VYiIh6knAIcV/0LyXhkfe7hSIthJhny8v7azUNe
      hE0kH374IdXV1aMa/ADTpk3j/PPP54477jiiZsO+g+3bQw9+AKEfNPgBRKgddAUR6Sb+/H+g
      fPISQjtyt4EHkhYF8HjaaK5pJROtzNu3b+fkk08+pPdceeWVBAIBrrrqKjweT4okG1/UPS8h
      r3vgsNvRWtaRePUniOiR8blHIuUKkIz46OiJMG3hMdhS3dkhIoSgrq6O6dOnH9L7LBYLa9as
      4atf/SpXXnklLS0tKZJwfBBCIG96FBHrHacGdeIvfR8xyGoxGLqu093d3e/qnkkrZ8rvAdr3
      1mFy2Wmrb0VZPHdId4iJIJFIsGfPHubNmzem95977rmUl5f3nwmMRuM4Szg+aE3vo/fUjOpZ
      IQSyKggndeKKTlWeGUmSSKo6SVXwxp4Ip85wUKDvQG14F/OcrxzUhq7rqKqKrut0dXVx//33
      8+KLLzJlyhTsdjtVVVX87ne/Q5Im3i6YcgWYtmgJ01LdyRjxer2UlZVhNo9dLU844QScTice
      j4fy8vJxlG78UPYMbvU5ECEE9V6ZZ7eGeL8uis0k4YtpzC23EYxr9ERUXFYD8ytsPL0pSKnL
      RNnHPyOQ/xJ33XUXLpeL5uZmpk2bxq233sqGDRswm81UVFTwhS98gbvvvhtN04hEItx5551c
      eOGFXH/99Zx88slYrdYJU4aUK0As6OX1tz/EbLRx5qp/G3QbJISOPxCkID8/1eIMYNu2bVRX
      Vx92O3PmzOGdd97hkksuyYhZ7bNo7RuHfE0IwebWOM9tDbG9PcGlS/L469WTsVsMxGWdFr9C
      fo6RQocRo+HTz/bUxgAWewDTsiVccsklJJNJhBBomobNZuOtt94asCIKXcNisWC327nvvvuo
      2fMJ377m/9Db28uJJ57Iz372M6qqqjAY0uswk3pXiLxiqqeW8nFt75DbH5+nk65AjDy3u3/5
      TAebNm3iuOOOO+z+brjhBi688EIWL158yOeJVCNC7Yiot3/fHUnqvLEnwsnTc3hjT4Rt7Qm6
      QiqXLsnjjq+UYjZ+OsjtFgOzS62DtnvJCXkA2L68jIsv/RZer5fi4uK+LZQs91md9v9e436U
      j/+A+bT/D2JetLo3mBLp5o1H70IvP4H3P/iQSy65hIKCAh555BHy0zgRplwBAELRAJHuAApw
      8C5ZEI5ECQSCGAwGDAYDJlNaxKKxsZHLL7/8sPsrLCzkv//7v/nhD3/IX//6V6zWwQfNRBBs
      2sA9r3ayrjFGQtERwIlTc/jHjhCnz3JywbFulk6zYxjryhVsxlw2d8D278AtpRCC+D+/jx7r
      xdyxCbXxPZTNj/XdCTW8jeW4S1m58lJWrlzJP/7xD1avXs2vf/3rtK2kaRlphUWVVB+bP0Rn
      ElNnHMPUGemQZCC9vb0UFBSMS1vLli3jnHPOYdWqVdx7773MnTt3XNodK0IIWlpa+NF/3cdJ
      DiN//GYVTqsBg4GxD/ZB0IPtw8sR96F1bgPJgLzlz2gt6wABQiD8TSg7n8V87DeQJImzzz6b
      Z555hh/84AfceuutuFyulE8mKd9wRf09fFLfis2WObMigKIoxGKxAbfOetSLHhm7ffuaa67h
      xhtv5LHHHkvbNm4whBA899xzfOc73+H/zA1w9ckF5OUYMRmlcR38ACSHjyQTMV/fBZuuoDWv
      BXVgaKzeW9fvkGcymXj00Uf54he/yKWXXsrixYt54IEHeOWVV1Lmf5VyBchx55HvykVSlYy6
      CQ6Hw7jd7gGHLq19074ZauycccYZKIrCFVdcQVdXV9pt3q+//joXXHABTzzxBH/7y584cUpq
      b1/UlnUIfei/bN/dw77fgZY8+AFdRWtd3/+twWDgrLPO4rXXXuPvf/87TqeTf/zjH6xcuZIH
      H3wQWZbHVf7UH7klCSMKvqRCJnmQRKNRHA4HQtf6B6nWuZ3Emz9D9zePuV2Hw8E999zD5Zdf
      zkUXXcTLL788qqgyTdNoampi586d1NXV4fV6CYUOLU63oaGB1atXc/PNN/PnP/8ZW6QJlNSG
      duqe3YhEYNDXhK6j1r0xYhvyrucHnShmz57N5ZdfzgMPPMDrr79OJBJh5cqVnHfeefzud78j
      Ho8ftvwpPwNIkgmj2QzhKDKQKRuh/U53as0/MVadiOQqRfc3gJog8c5/Y1/1OyTj2O8Hvvzl
      LzN//nxuv/127rnnHpYsWcLZZ59NMpkkHA6Tn59PWVkZPT091NTU8M477xAMBiktLe07OMbj
      tLa28sMf/pAVK1aQl5eHEAJd1w+6txBCEA6HufHGG/nNb37DggULAEjuTI/Xqlr/DpYFfa7k
      ergbedOjWE+9BWXrX1C2PTXi+/WunX3bJGnoi0STycT3v/99br75Znp7e3n88cdZsWIFa9as
      YfHixaOSc7+SHXjATsshuLi4kN6oNz2djZJQKITb7UZteBdDyby+K/p9Bzqt6UN0fxPGolmH
      1UdlZSUPP/ww8XicHTt28Je//IXCwkKKioqora2lqamJ0tJSZs+ezY9//GPmz58/wHbe3NzM
      n/70J+655x6cTicmk4lgMMjixYuJxWJUVVXR3NxMLBbD6/Vy44039g9+2Le/TgNq/VuY550H
      SCRevx2t+UPU2tdH7Xohoh7Umn9hrj5nxGcNBgPFxcXcfPPNnHfeeVx33XW88sorw1qNhBD0
      9vbym9/8hl27drFs2TIKCwtZsGBBetyh92zfRGN7gDPPOnPEbVC63KFfffVVNm/ezE2TNmP7
      4u1IzlKif/wy6H2HLdOcr2BdfjMGV1nKZRkNmqYRDofRdZ3W1lZsNhstLS2Ul5fjdruprKw8
      6BIp+tRl6J1pWAUkA5bl30Pv2rkvxPLQh5Rp5hexfeUeJMOhuZPccMMNzJ8/n2uvvZbm5mY2
      btxITU2f28eKFStIJpM8//zz1NbWcsIJJ3DZZZexe/dugsEgjzzyyEAFSIZC4HIR8/dgzckn
      x2YmFAqRm5vbf8FhtVoRQpCUZWxWK0LXCYZC5OXlDSnkxo/eJapaOfm0ZSP6AqVLAR588EFy
      c3NZJT+JdcWPkOx5xP5yyYBnzMddhu2MW1MuSyoQQhB9+IuINIU0Ss4yRKTrsNqwX/wYpsrj
      D+k94XCYO++8k46ODpqbmzn33HNZtGgRsizz9ttvk0wmufjii1mxYsVB7/V6P7MrkaNB6js7
      sYkEBmOCqK8He7GLlvYuZk4qZXtNI3kOM0hGfOEELmMC3V6C22EeVgF0XWCzWTMqJLKmpoZL
      L/0GYoeKiPv7gkE+g1r3OuK07x+ZASByBJEMp627wx38ACLQAoeoAC6Xi1/96lfs3bsXp9NJ
      ZeWn+aXOPffcYd9bVFQ00ApksjqYfcwx5Oc6kdCIRmO48oqoKC3C6nDhdtoxGo3YnG7yc3Ow
      5rhx2Mz9WRQGQ44GKSotpaa+KaMUoLOzk/KyMhA6QokjEgenZhQRD1rrhgmQ7vAR0d6DbO6Z
      jtrw7pgCbSRJYvbs2QMG/2gZsALY992K2itmUJiM43A5qDjgpnT27NkHPD06z8fe9hY+3tnI
      7GmTh3CFSD/7D0WFOaDKUVASiCEGi9a+GdPU5WmW8PDRI919lpUjCLXhHZQtj2M54d/T1ueQ
      hhmT1U5F2dAz+2gpnzWfi2bOQ1XVjLkH2O+sZWj9EBH39yWFGsLkqXn3plm68UGEOydahENH
      V9B66xBCTIwvUCISoM0bxqRGsTlc9IZlihwGYrqJZMjP9DnzsRzqFC5JfLJ9K9u3fsIFV1ya
      EVFh8Xgcu93e78ei+5uQrM5Bn9XaPkYkgkg2dzpFPGw0X/1EizAm1N0voE45JW0JuQacASKR
      vlvD9rZWujw9tDa30t7eij8QotfTQbc3MAYDF1gMKtb8oozY/gDEYjFycnL69/1a5zb0YNvg
      D8tRlN0vpFG68UFrGzoGINNJfnAvetSblr4GrABFZZUUATOnThrk0WoikcghH2Sj/h4272pg
      6vRjMuYQHAwG+3zO98e06ioiPLQVQ236EMvxl6dJusNHyDF0f9NEizFmRLgTeeP/w7Lkagw5
      qc0nNaIvkBCCRCKOpguczsG3CcOR486jorQMZHlIZzhvdwf1Ta2H3PZY8Xg8lJWVfZoTX1cH
      tQLtR++tQ2iZmNNicPRACyQnvuTV4aBsfozEP3+UcmfCAStANNBLQ3s3ZosVt82ALNlQIn6M
      Bp2EpZjKXAvRZBSfP4QjN5+pVaOwBEkG7FYJf0Id8sTtcuWS0Ptqg6UjImz37t1MnjwZoRx4
      wJUY6gZTRDyovfVIBRMQtDAGtO5PGMttbKahde9CU5JgSJ0TzYCWkwmVvMJCzBK0N9Zgyi2E
      hE6eQyMcDvFJZ4CKaZMpLChktPsZSTJiMApaaxvRvnDKoOeA9vY2JKsrbRFhLS0trFq1Cupf
      PuCnww0YgRTuwFQye5hnMge59l8TLcL4IEfQNj6M9eQbxr1poanont0DFaCgrJT9Vv+y0tIB
      b5hyGJ0VFRVRvTBvyP3W9FlzDqP1Q8fj8VBSUgI1g/inD4HaugHTjDNSKNX4IDQFvefINN0O
      htr0PqZZX0JEe8b1PkbEe4n99fJ0ZIYTRMIB6uqaMmZRDofDuJwOhD76W0d1z8sIJfNvVvVg
      KyLum2gxxg29exexxy8k/sL1aL6GcWtXhLtB/8y2XElE6ewN4u/qYNLMYxDJMLJuIx6PUFrk
      xhuI47JJGGw5BDxeikpL6PWHKCnKByTs9oOt/P6ORtoDOiUlroywAsXjcQKBAG7PhyiHcO0u
      EkFEpBsp/3DWwtSjtaw/4m6AR0aArqFsegzjl356+K0JQfL9XwOfsQLFoxG8vQHyi4sI+704
      HBa6OrzkGI009vhIxMLsramhu7sVozmHPbv2kpfvpr1pLxF58F96IiZjMAj0pDLhNcJ6enr4
      0Y9+xFlnnYW291+H5ikpNBKv35E2+/RYEGoSedOjEy1GylCb3kcIneS63x/e30GJoe0rBjJg
      BchxuZlUacFmAoMlB6vVyOzqXCwmA3pXCx0RjXkLFqAbLeRYbZSW5hEIRTHa3BS5By9zWj5z
      Dq6Scsy2nAmNBhNC8JOf/ISlS5dy9dVXE//rodv1tfaNqDX/xLzoWxmZAEv3NSJCHRMtRsoQ
      kW7k9X9AXvcAItaL7Qu3HXobmoza8M6ngfgHvmiy2CguHLiNybH3PVIxaQYVB92PmSgptsEI
      xS/aGvewdU83X/36qgnxB6qvr+epp54iHA5z1VVXIUnSsIHcw5F879cYp5yCsTDzTKJax2Y+
      D+bP4ZDX3geA2rL2kN8rlDiJt3+BdEDoZVry0JmMJvQJKsEphOAPf/gDZrOZBx544NOoqcEy
      FIyqQR15/R8yKsMxgFBl1NrXJlqMtCECrQhl9EHxQujEnroUdddzKJ/8o//naQnTjcbC5DkL
      0zY36bpONBolGAzS1NTExo0bee211wZmb1bHnl5D3fsv1KmnYJ67ahykHR+UbX85ov1/Dhmh
      obVtxDTt1OEfUxOIqBfJWfpptg/t0799ylcATVXIcblJCiUtqdGbmpo4//zzOe+88zjllFN4
      7rnnWL169fimLhc6yp6X01JYWgiB1rUDIUcPWnWEEAg5hlLzCsmP7ku5LJmGvOXx/noDWud2
      RHxgehYhBPHnriP50e/6EnRpB096KV8BktEgtbWN+P0qKqTsDKBpGi+88AKrV69m1apV/PjH
      P6axsZFZsw4vs8OQ/TV/1JdRwlWOoaQ6dYdiXSH+4vfAaMZx+Qtg6jMlCKGTfPMulL2vgBqH
      z0nJokNBa/4Qed0DWJb9B/FXfwLxAI6rXiG54SEsCy4EgwGtczsYzUNmyEh9evSQn1BS4piZ
      U1N6D7B27Vp+9atfMXv2bG699VaMRmPKBn8fgsSL3wNJwn7ub1N3S6zE+yuxiGgP5BQi1AS6
      5xOU3c8dlQP/QOR1a1Dr3+6zfmkK8vanUTY9gsFdhWRx9J31tOSQBULSkhYFIBGJYnI6RtS4
      sWSFEEJw0UUXcf3117N8+fJhC17IO/6GZLSSePsXgxaEGwuGkmpyvvoQkn3oxACHgtC1vjq+
      Rgt6bx2xJy7uS9diNCNZnH1xs+Mk++cOixPkCIb8aUjO4hFjutNyCO5oqadmbxNzjl9CeUHu
      uLevaRp+v58VK1aMWGBBa9/SF901jgNI93xC7PnrsCy8BNOsL/bNPCMgdBXd39yXOU3XMJYv
      ROutQ7Lno37yEkJXMBZMR214F8Q+k62m9GWwyDI0+/6uur8R/I0jPp4WBejp7iEeT9LW0kp5
      wdjqcQ2Hpmn9nqQjIeL+QQ9Dh4vetYNE1w6ktfdhcFdimrYCLA5EqAMhR/v27pqM7msCoaKH
      u/vSgOyzjSk7/npQm+oRHNRypJCm1IhF6LY8jp2fGndiVVVHXbRaJIKfzqgpQIQ70cKdR5dJ
      8ggmLRdhAoHf40EbwlLS09VGY+vYr/BHqwBCUyEZRuveNea+sny+SPkKEPJ2UNPQgrc3NqQV
      KKGCCQ1d19E0jVgshsFgQNd1JElCkqRhvzYajdx5553EYjEkScLUvg496kGyukDX+rYgmtyX
      3aF0HsYMu8U94jkwmC6Tvh7FsylXAKvdSb7bRTwuhrwJNks6UVXCYDBgNBrJyRncsW44Fi5c
      +Ok3MzM/cCVLZpA2M+hoSVdy3CxZYN8KIIQgEskMu3IsFptoEbIcRZigL7loKmfdzpYGWrqC
      LD5x0aB7rngkiC8iU15SiK7rwybbzZJlPEmLGbSttRXMQ1+ANTQ04CqsSHud4CxZ0mIGLS4u
      JhaPD2kFys3Nxef//ARyZzlySMtUq6gqQtPRGTw9+qSpMxgsGWOWLKkm9fEASoxwKA4ZGEM7
      HOnIUJdl4km9O3Q4TEROYjFnQmL0kRFCsHv3bm677TbC4TBLly6lurqaL3zhC2OqQJIls0l9
      nWB0ej09yLo5o8O1dV2nra2N2267jY6ODu6//37y8/Opq6tj+/btXHDBBdx4441885vfzMiM
      EFnGRsovwsK9nXy0YRuyZuTL53wpY8qkfpabbrqJHTt28POf/5xTTjnloEGeSCS47rrrKCkp
      4dZbbx22KGCWI4eUnwGMJivuvFwsZnNGZIYbDF3X2blzJ8888wzLly8fdIa32Wz8/ve/Z+nS
      pXz1q1/lvffemwBJs4w3Kd8CRXzdbNq6nbKKaanuasx0dXWRl5dHYeHw+Y2sVitf/epXOfnk
      k/na177GRRddxKmnnsqMGTOyK8IRSlp8gRRFGTZM8UAmYgv0zDPP0NHRwU033TTq93R3d7N2
      7VpeffVVdu3axb/+9S8cjpEjwbJkFmm5CNvx8Yd8sG4zmWpUfOeddzjxxBMP6T2lpaWcf/75
      rFmzhuOOO4433ngj45JlZRmZtChAQXEBZkwZaQUSQtDU1ER1dfWY2/jRj37E3/72N+677+jL
      zXOkk3IFEELH19tLU3NrRh6Ck8kkiqLgdo+9DGpVVRV//OMfefXVV/npT3/K1q1bs6vBEULK
      D8GdNTvxxhXmH784Y8qkHojP5xuXA6zVauWJJ55gw4YNrF69mkQiwbe//W2OPfZYJk3KOnpk
      KilfAZyFxbjsLoLejiGrRE4kTU1NTJkyPkUv3G43X/rSl3jqqae466672L59O1dddRUPPPAA
      dXWDZybLMrGk4R7AhKqoiBRmYjgcmpqamDlz5ri3O3/+fH7yk5/wyCOPoCgK//Vf/8VXvvIV
      /vznPxMIBEZuIEtaSLkCOPKLcdstBH1+hirck4gG2LZrT6pFGZT+gnkpoqqqiu9+97s8+eST
      PPbYY3R2dnLOOefwwQcfIMsyQghefPFF7r77bhTl6E5zOBGkxR1aEnESsSGr8FJXW084oaWt
      TvCBeDwejj/++LT06Xa7ueWWWzj11FO5++67kWUZs9lMcXExc+bM4YILLuDnP/85u3btYsqU
      KSxZsiQbHJRi0vLbzXXnE9Obh+hMYv5xi4lEwhMSEdbR0UFVVVVa+zzppJN46aWXSCQSyLKM
      y+VCkiTWrVvHb3/7W2bOnMmGDRv4z//8Tx588EFmzZo1vunds/ST8r+6nIiyp7aFWdMnDXsP
      4HSm3wFOVVVaW1upqqpKe9/Q519ks33qJr5s2TKWLVvW//3atWu59dZb0TSNxYsXs2TJElas
      WJG9cR5HUj/tCZg8bSZGyZhxF2HxeBybzTbqtIrp5qSTTuK5557D7/ezbt06duzYwa9//WtO
      PvlkLrroIqZPn47T6cy6Zx8GKVcAk8XIri1bcJdNYnr1Manu7pCIRCJHRA6i/Px8zjrrLM46
      6yxuuukm3nnnHdasWcOOHTuYO3cu3/jGNzjttNNSto1LJpMIIbBareOqbKqq0tnZSSgU4vXX
      X2fz5s2cffbZnHLKKf2r8v7Mf6kiLc5w2zeuo90T5syzMyse4M033+TNN9/kF7/4RVr6G290
      XWfdunU89dRTtLS0cNdddzFr1iys1rEVpN1vCIhGo9x77710dnYiyzLt7e0IIZBlmUWLFnHF
      FVfQ1tbGli1bOOGEE6isrGTOnDnE43Hy8vJIJpMkk8n+s83+vFOyLLNu3TqMRiPRaJSnn36a
      RCKBqqpceumlLF++nEceeYStW7dSWFhIT08PkUiEiy++mO985zuDKp8Q4rCUJC0K0Fq3k401
      XZz3lS+OaHdNpwLcf//9lJSUcNFFF6Wlv1Sya9cu7r33XlpaWjj99NM555xziEajmEwm8vPz
      ee2116itrWXGjBl0d3dTV1fHjBkzcLlclJaWsn79eurq6voH1FVXXcXs2bMxGo1UV1djt9tR
      VZVnn32WtWvXUlZWxsKFC9myZQv19fW0trbS3t7ONddcw8svv4zVasVgMOB2u1EUhYaGBkwm
      E+effz66rmO1Wlm+fDknnHDCQQNbURRqamqoqKjA6XRy6aWX4nQ6+c53vkN1dTVr165l8+bN
      hEIhtm/fjsFgoKKigqKiIiZNmkR1dTVer5fJkyczb9487HY7mqYN6pGcFgXY8OG7eH0xzjz3
      rBGLZadTAW655RYuvfRSTjjhhLT0lw78fj9vvvkm//znPyktLcXn85FIJDjnnHOYNm0ajY2N
      lJWVUVlZSXt7O9FolKamJpYsWcKiRYsQQiBJ0qhqLXyW3bt3s337dpYuXcq0adPo7OwkEolg
      sVgoLS0lHA5TXFx8yO3G43Fqa2v5+c9/Tjgcxm63c+2112I2m1m2bBkWi4X6+np8Ph/Nzc00
      NjZis9mora2lsbGRZDKJyWTi2GOPZerUqbS2tiLLMldeeeVABdA1DYzGQ7gdE6iqNuLec/em
      D9la38tFF68asVJkOhXgyiuv5Kc//SlTp05NS39ZDh9d1xFCHNKWR9O0/u2X3+8nNzcXt9vN
      //2//3fgITjq8SCVlRHtbMNktWM0mAEda46dHdt2MWP6ZBKKQmdbO1OnTUPWQIlHmTJ1eF+a
      WFKn+pjpGecNGg6HcTqdEy1GlkNgLCuT0WjEbrdzxhkDs4Y/+eSTn7UC6fj9QaLBMAZTgnAo
      jITg2OOPp7DATa/Ph6ZDQX4+fm837d4I06rKhu1cCIHD6cAXGX1V73QRi8WyNvWjnAEK4Cgu
      IRmKUDR5Mgazrb+UkFGCstJSTGYTqi6BriAZjJRPlrCNEOrYVbubVm8Id04u6mc7nECSySSq
      qmYT8R7lDBiPBpOZooL8QV927NuXG1UVk2n0Sa5KZxyDIb+MHJtlxANwOonFYulgqNsAAB9B
      SURBVNntT5aBCqDKcVo7e7EaVHJcefQGwhTl2kjoRuJBHxVTZ9LZ3oYRHWtOHmaTQJhs5Lkc
      Q+7vDUYzsaCPTR/V8MXzzklZpfhDJRaLjakSTZbPFwMUwOvxYHe4aN27A4PVSziu4zcnMTmK
      UEIe3KVTELpKKJbAFIsSkQFh4Pjjhi99qifDCKszow7BWQXIAp9RgNLKKkLhGNULFmG2WonH
      ZXKsJmQNNKUcl8OEyzaVZDyGJceJrqlD+Tj3k4xHqGloo6h0UkYpQDAYPCLcILKklgEKIElG
      3LmfDgqrpW/X3rdt6TssGkwmTK59xS6MI29oJEnC6XKjJ+JDHoKDvh5CCZ1JFaVj+AhjIxQK
      ZZNZZRk4HpOxMF2+ML6uNiZNn4mQoyQ1K/F4hNIiN95gglybhGS1E/D0UFhSQiAcpbggD5Bw
      OA7eUpgsZtREDC0nf8hLMKstBy3iT2tATGtrK0VFRdkU6Ec5AxUgHqWjq4eyggLCoSCVJS52
      1fioLHbQ4vNDXKGrqYO88lLcOSU01DZSNX0qHc11FFTNZjCLusFgwek0smnzHk4+bdmgmSFa
      mxuQcvLTGhCzadMmrrrqqmzE1VHOwHsAdyHz5riwGEAyWTCbDcyb58ZoNEB3Ox5Z4vglyxAG
      IxazmdLSfGKJJAlnPgW5Q5tGJ02eToL8Ie8AZlUvGM/PNCp6e3vH5JeS5fDR43G0YBDJZMJU
      VDSubau9PpBAD0cIPvMMxd+/Zchngy/8Y+CYNJrM5DoHblQslr45u6RiMiUVn2nBaCTXbCbX
      Nbw9vburhb27eli6fElG5AYSQuD3+w8rGVaWQ0ePx4m8/gahF/6BkGUkux3Xyi/hWnUuhjEE
      JWmRCHokgjE/H8lgAEnCc/fdSFYr5spK4hs3kdi9G9vcuQhVRTpgtdciEaLvvZ/6i9morwtP
      UKdqRvmIjnDpIplMout69iJsDGjhMMZDtJ7p8TieX6xG6/WiBYKg9+UHEYpC8Jm/E1u/gaJb
      voepqAhplEmUhari/fU9JPfWYnS7wWDAVFqK2tEJ0Pe/EHh+sZqcJSegR2MYcnNxnHoKSksr
      oedfQI/FUq8A3vZOsFhIdvmJw6DnhHQTCoXIzR26bGuWgQghiL71NvGtW1FaWin63k1Ypo0u
      3b3m9xN59z3k2tohn1FaW/H8/C4kew7O01fgOucrw0aeCSHwrP4fkntq+vsA0Hp7P30mmez7
      QlWJrV3X//PYBx8MaCvlCjBlwSIqFAVTBhXI6O3tJT8/f+QHP+coHZ0Ycl0Ync6Dtgj70SIR
      om++ReCpp2Gf53zPPfdS+rOf9m09hhioSmcnwWefQ95bi9rdPaIsms8P+An85Ukkux2D3Ya5
      qgrLAVn79HicwBN/IbFrF2pn19g+9GdIiwmktW43H+9o4oKLz8sIV4jdu3enJBtcpiOEQPP7
      UT0elLY2Ak88iam4GIPLhdLWRt4lX8d5xukA6LJMbO1aAk8+jf6ZTHZaby+dN38fx6nLyb/q
      3/v23/Rtj7TeXiLvvEv03fcQ8TF4AAuB/+E/AiDZbNiPOxbbwoUYXC78j/5pwCw/HqRFAeRk
      Aj2DUkK8/fbbXHPNNRMtRlpRurrwPfQw8t5axAEZ6JSWlv6v/Y88SmL3bgxWK0pbO8k9Q2Tr
      EwKRTBJ5401UjwckCbWzCy0aQURj4yazSCSIrVtPbN36cWvzs6RFARKJKEWFZRmxBRJC0NbW
      dtSUPNVCIWLrNxB68SU0j2fYZ4UsE3v/g2Gf+SyJ7TsOR7wJJz2Z4fILqGvvzggF6OnpIR6P
      j1gPLJUk9+4ltv5j8r91Wcr6EIpCbP0G/I8/cdAWJsunpFwBwr5u9ta10NPjR0tHh8MgyzL3
      3HMPN9xww4Qlk1K6u/Hc/d+YykpRfT4MOTkk99SgtLeRs2QJxrw8tGiU2Np1OM84HcMhBOzI
      La1IVgt6OEzv/WtQOztT+Ek+H6R8PCYjAZo7vMypnpuWekxCCEKhEC6Xa0D8aCwW44YbbqC3
      t5e77rorDZJ8Ri5dB01D8/QgkkmU5hY6bvoeBpsNPRIBIPDk030DXgj0SIT4ho9xrDgNhMBY
      XIT1mNmIWJRkbR2S2YRt/nxUj4fIG2+iR6JEP/wQyWzu2+PrQ+XiznIgaUmLAqAqCgazOaV5
      gYQQvPnmm/z4xz+muLiYY445hnPPPRePx8Of//xnli1bxu23357S2T/xyR6M7lwSO3aitLej
      tLeDEKg9PQCYCgv77deHhCRhyM1FxOMIWQbAWFiAFgxB1qFvzKRFAUJ+L431LUyZN588+/CG
      0MNRgC1btnDTTTfx0EMP4Xa7WbduHVu2bMFisbB48WLOOuusMbU7GoSu41vzING1a0GSIJvr
      /4ggbYmxurp8FEyZzvITjh322bEqQENDA9deey0//OEPWbly5VhFPSSEoiA3NCA3NRP76COS
      e2v7L4uyHBmk5UxaXlaKKbeU+XNmpKyP3//+99hstoNyvxwqYl/VFoPV2ndxFAggEgmQJEQ8
      jtzQiNzYRLKmBi0QQA+Hx+kTZJkI0qIABoNE095a5i+YM+jrQV8PUUWionTsrrEdHR2sWbNm
      1BXpD0SoKqrXi1xbS+DpvyEZDJgqK1FaW9GCwb7tjMSI4Z9ZjjxSbwWKhmjr6sFoNA15DxCM
      xvssH3oBmqYRi8UwGAzouo4kSUiSNOzXmqbR29uL3W4nHo8P/3xvL3pTEyKeQOnsRDKbkZua
      0AIB0HWknD6zo9rrRcqxY8rJ5g1KHwfOMofz9ehJvQLEIiQUDV0XQyqApClElb6ErEaj8ZCz
      NQghePLJJ0cX41tZ2fcvSxbSaAbVNQ3JaBzxNjidyXGzZDEB/QUMMoFYbPycqbJkGQkT9KUu
      SeWsG/J76faGmT5r2qAhkaqcJByXcbsc6LqezdeZJW2kxQq0a/s2DPYChoohqq+rwZFfTr7b
      lfYyqVmObtIy0irKS9nZ6B1y/28ymeju7qKqfGKzNAgh2LFjB8888wzhcJhQKMT3vvc9ysvL
      cTqdA0qaZvl8kBYFCIajmIWGBoNugaZOn4WsTqzzlhCC//zP/2Tbtm1885vfZPbs2cRiMX75
      y1+SSCTw+XxcccUVaJrG1KlTsdvtLF26dEwFG7JkDilXAF1LYJDMWHOGziBtNJmxT/Cu54MP
      PqCjo4MXXnhhQPmdU045BYDu7m4ef/xxZFmms7OT9vZ27rzzTubOncvNN9/MpEmTJkr0LIdB
      6tOiBIP4IhGMxszePvz973/n6quvHrL2VGlpKd///vf7vxdCkEgkWL9+Pf/+7//O9OnTOeGE
      E7jmmmuyhauPINJQKV4nFoshGTLXP33Xrl10d3dz0kknjfo9kiRht9s5/fTTqaqqwu/3s2bN
      Gl544QUuu+wyli9fTlVVVXaLlOGkXAHMNhtWo5FwQs5YV5q3336b888/f8zFlvdnmFi8eDEN
      DQ389a9/5ZVXXqGtrY1TTz2VH/zgBzidTnRd76/dm5OTg6IohMNh8vLy2LZtG88++yxWq5VV
      q1ZRVFSEz+dj7ty5WSVKISlXgEQ4QlSWMZvtGRETPBg9PT0sWHD4+UkNBgMzZ87kJz/5CQCR
      SITHHnuMc889t7/Q9H4l2++f5HQ6CQaD+Hw+7rjjDiRJ4v7778fn8xGPx1mxYgXnnXceM2bM
      GLOCZhmalCuApiTxer3YHRMXhD4SHo+HkpKScW/X6XRy3XXXDThbmEymfge+/fcdmqYhhOj3
      ZF21ahXQVyD64Ycf5mc/+xmNjY0sXryYiy++mOXLl4+7rEcrKfcF0lSZaCwBSLhyXRnnC5RM
      Jjn33HN56qmnKCgoSFu/h4osy2zYsIFHH32UaDTKt7/9bZYvX47VmkmlB0cmHo/T3d2dMcXJ
      0+IMt23DhxicpcydO3PE7NDpVoBnnnmGHTt2cOedd6atz8NB13V27NjBQw89xI4dO1i1ahWn
      nXYaS5YsSUl/wWCQRCJBaWlf9Z54PI7RaMTj8WCxWMjPz8doNBIOh8nNzR3SAqbrOv/7v//L
      888/TygU4utf/zrz589n1qxZlJWV8dZbbxGJRLDb7RQVFfHxxx8zb948/u3f/g1FUdA0Dbvd
      jhCCbdu2UVdXx9SpU/svKPPy8sjJycFyiFmm06IArfW7aetVWXLiwhH3XOlWgG984xusXr2a
      KVOGr3afaQghaG1tZcuWLfzP//wPjz/+ONNGmbB2MAKBAB9++CGJRAKLxcLGjRtZu3Zt/+E9
      vC/yraWlheLiYsrLy9F1ndbWVnJycpAkCbPZTEFBAf/xH//BaaedxiuvvMKsWbN4/PHHeeed
      d1i2bBk//elPaWpqorm5mfXr19Pe3k59fT1nnnkmDoeDdevWMXPmTJYuXcpLL72Ex+Ohvr6e
      4uLi/n4kSeLMM8+ksbGRQCBAJBIhFovR09PDrbfeyumnn84TTzxBPB5n0aJFnHzyyQgh+t3s
      A4FAv+t8WhRgx8Z3+XhLN9+85uIRc4OmWwHOOussnn322SPaAW/t2rXceuutzJs3j+uuu475
      8+cP+7yu67S0tLB27Vq2bt3K1KlTef755znttNP6B8nChQs5/vjjyc3N7Q9OUlWVhoYGqqqq
      +v9Gzc3NSJJEWVkZiUSCWCzGD37wA7q6unC5XOTm5pKfn88NN9zA9OnTD8miJYSgpqYGh8NB
      ZWUlLS0t2O12CgsLB/UXa2xs5MILL8RoNLJ06VLOPPNMnnvuOVpaWlAUBavVisPhwL8vm/TU
      qVNTrwDepr2s31NH9YKTmV45csBKOhXA5/PxrW99i5dffjkt/aWSYDDInj17WL16Nclkkiuu
      uIKvfe1r/RFxXV1d/PjHPyYcDvcPhpUrV3LsscdSX1/P/PnzOf7448dFFiEE0WgUi8VyyFuS
      w+1X13W2bt3K/Pnz+89HQggURUGSpP7U+LFYjPb29tQrQE9LAzsaGlFlK2esXD5ikYx0KsAr
      r7zChg0buP3229PSXzpQVZVQKMR9993He++9h6qq6LpOTk4Od9xxB/PmzcNoNGK1WrNet6TB
      DOosKKAskkCSRk6KlW5aWlqYPn36RIsxrphMJgoKCrj99tv7slpoGolEAofDkXXRGISUj0mL
      NYfe7g7q99YyVP4yNRllT21DqkU5iEAgkNGmz8NFkiRMJhNOpzM7+Icg5SuA0WyhOD+HHj9D
      3AEIavfWElZIa51g6LsAKywszNYKPopJyybQ5nCgi9CQdwDTZ83GFwimtU4w9ClAaWlpdi98
      FJPyv7zQdXo8QSZNKh3CGU7CarNTXpZ+M2R3d3f/BU+Wo5OUnwFiYT8JXULoekZ5g8qy3H+7
      mOXoJeUKYHc6aGtoIhgIZpQCJBKJQ07AleXzR8oVwGC0sej4eRhNIyfFSifJZDIb5J4lPaZ5
      m9UKBmNG3QPE4/GsAmRJz5js9QWQo9Eh7wEmgmg0isORCXXrs0wkaVEAu0mnxePLqBUgEolk
      c5BmGWgGjXR1QVkZeqAXo9nWH8VkNBqorW1gyuRKZFWjq6ODispKNAxEgwEmTR4+JUgkoXP8
      gjkZdQYIhULZFSDLQAUQQiAJQZfHiyTphEMJDOjMXXQcNpuNjs4uhNCx2ewEertp6wlTNYqi
      FhaLmUSGlQ6KxWI4nc6JFiPLBDNAAez5Luobmil0uzDl5FFSIiMEWAwGcmxmbHYXCdWAQY1i
      MDmZ7izE7Rzejt7b0oCzsIimPW0ZZQZtb28/aqrFZxmaAQpgsjmZPePAWfFTO3lZxYGDJX/U
      HVgdNhp3NnPsnCkZtQXavXs3l12WukrtWY4MDv1cKnR8/gBCqMTjffVq/T7fkI87Cys4afF8
      hGQYMR44ndTU1IxLKpQsRwYJRaEjFBzwM0XTBq4A3q42AnFBT8senAWltHsjlDsFCZObuLeV
      xad9GZcFWppqCRTkEfdrKEk/kruQlo5ujp1fPWjn9bu3U9vkpWL6NDLB8q4oSn+QSJbPP3FF
      4Y26GgKJOOdWz2dzeyvzSyv4197dAxXA6XQRSIQorZiMNceB0WQnz2VBN9pI5hjxdnfhnFTG
      9JmzEbpMWA2xrcXHomPm4RxmerdYbVRNmZQe19NRkEwmj7h0Ip9XOkMh1rc1c/7c1K3GXZEQ
      61qbUXWdmh4Piq7zcVsrBkkaOCZtTjczne7+7wecEctL92UzM5DrygUg11VA8aQqLBbLkPv7
      qL+HxvZucnMLM+YQHAwGs3cAGUBckXl6xxbCySRfnjWHrZ3t7PV6mFNcSnPAz6o587CaTOzo
      7kQIQYnDRXlu7qjb7wgFsZpMfNzagqr35aZV9v3vj8ewm82DT8qRSASn04nQFRIy2G19kbyf
      jeiXDAasIwQ923NdBHu8mIz2IRXA291BhzfEwnmD1xEeD+LxOAaDgTVr1vDee+9x2mmnpayv
      LCMTU2Tag0E6wyEAfvvhu2hCEEom2O3pBvoCqBp8vfjifXXjJrnzWDppCosqKjEZhj9RJlSF
      J7dtZknVZDZ1tB30ugBiijJQAYKeNrY1dJMjybgLinDYJXq8KqoSI7fYTcgfRQ514ygpQw7K
      mO1WXHl5mEQCs72A8tKDwwsNRhvHHXcMu+sCQ64SBoORSZMmpTQi7Oqrr8ZkMtHc3ExnZye/
      /OUvs5Fgh4Cq67QFA5Q6XdjHUIz8QLZ3dfBSzW5yzJ9Onv5E/KDnNra3Dvi+NRigNRggqSgs
      qZyEcZgUK7U9PXiiEd5vrB9WlgEKYHXkUlqk4LJKGHPclLgtCClOvstCS0cTwUicmZOnYXG5
      yKl0Eo8EiamCgD9M9eQZQ3aSW1BKbs7QVShVVSYaD5Cf6zisiLCGhga2b9/Or371KxYvXsy3
      vvUtXnzxRa699lo8Hg+KomA0Gtm0aVM2TnYUJFQVm8mELx7jfz96j4SisKiiiosXHDeq350u
      dF7YvRNF07ho33sUTeOlmk+IKgpRRRmTXC/V7KbC7WZ6wcBLWCEEO7o7WVhWQWsoAEBITg7b
      1sAzgCOX2TMH7rEqK/vcBWY55jJzpoTJ9OnSk5vrACHQKsswGob+hXS31uLzKWgwaFqUkvLx
      qa7y0ksvcdttt/H4449z7733ctVVV7FkyRLuuOMOXC4X3d3dTJkyJbv/H4GucIi2YIDX6mq4
      8vgT2dDWQnzfYN3e1cFp02ZQ7hp5L55UNTa0tZBn69v+SvveH1Xkw5JPAA99vI7Tp83kjBkz
      kVUNk8HAk9s30xIIEIjH6QiFRtXWqKdao3GIRyVp2LTdQlcJhaIkzRZSbXdpbm7uTyd+9tln
      k0gk+Pjjj/nNb37Dd7/7XR577DGuueaaFEtxZOONRvnd2vf7D41PbN1Ebyza/7qq67xVv5fT
      p88iqSpMyy8ccjVIqgpCCOL7/hfA5kH242NBF4K3GmrZ2N5CVJZZNnkqe3o8ALxcs3vU7aTc
      Mtm6cxtFc5ZirN1DAkhVAGJHRwfvvvsuL7zwAgBmsxmz2cwZZ5zBGWecgSRJLF++PK2ZyoYj
      rihs62xnl6eLC+YtxG4yI2sam9tbWVBWgctqxWQwDLnPjSsK7zXWE0omuGjBcaPuN5xMYjUa
      UYWOAQmjwUC9z8sxhcWoQmev19M/+AG8Bwz+/Wzv6mR7VycA1yw5iZmFg/uDyZoG9F1C1fu8
      tAeD1PV6Ry3raAgl+7Y4G1pbxvT+lCtA4ZSp+BpbyS0pHTEr3OHQ1dXFihUrDvLvOXB2ygTb
      f0yW+dPmDegCAok4oWSCP23aQEJViSoyiqbxWl0N+fYcZheVcM6cuSRVlZzPKK4vHuOthlrK
      nK4+J8ZR7MmTqsrT27cQlZNEZJlcm41z58zjkU0bmFlYxDFFJbxWu+eQPs9ftm7i6wsXUex0
      0huNMikvD5up7y+dUNV+y98fN64/pHYPFUXXxvS+lCuAw11ISX6AnqCcUl+grq6ujM3woOk6
      /6z5hGAijiRBU8A/4PWuSHjA97oQ9MaifNTSSE80QnPAx0mTp3L27Ln9z8T37aO7I2Ge2bmN
      r81fiEEafLXwx2O8sncP4WSCel9v/8/DyQQv7dkFQF2vd0yzc1SR+X+b1mOQJIQQFDoclDld
      HF9RxSt7D02ZJoK0XM6G/L3UN/Uyd2F1yvyB3nzzTS644IIUtX54PLdrOx9/xqQ3Wmp7ewD4
      qKWJ6QWF+OMx3mtsoNTZd5AX9JkLpxcUsrjyU2OCrKnU9HhIqCrvNNbhjR68lRH0mRbHA32f
      u7s3GsUbjbKzu2tc2k01aUmPXr9zEzuaApxzzpkpqQ+gaRorV67ktddem/A6WkIItnS08W5j
      PYU5DiJykubPzPhjRYIhLxPNRiPlThcWkwkJ6AiFDtvacjSQlhXA6+uiuzGAmqIO9we4p3Lw
      R+Uk3ZEIEn0z7pkzjqFgnzOdquv4YjGaAz7qe71s6WwHDt7aHC7DzVSKptEyTrP50UTKFSDi
      85AUORRVpC4A2Wazcccdd6So9T6e372T7V0dGCQJXQi2dbZTkOMgmIij6jpahiX+yjI6Uq4A
      kkFCVlQqJqfOG9RkMnHiiSemqPU+M16tt28vvn+vq+g63eM8w2dJP6lXAMlAUXEJBoMZnTSl
      oRhHdCH4686txNWxXdtnyWzScggGCPZ4sRcXZVyNsKGIyTJNfh//3LubnkEsKFk+H6TlELxz
      8wZa2rqonL2AY2ePvZJhqhFC0BL083Z9HXu9HrQMy2SRZfxJiwK489zYQzL5I2SQmEgC8Thv
      1O9lY1tL9jB7FJEWBTAaDHh7vJxy+vJ0dDciQggCiTiKpuGJRuiJRnizvhZFG9t1epYjl7Qo
      gKapFBWXDOkK0VhXQ1QxML961mH1E5Vl2oIBPNEIDouFuKKQVFVMBgN2s5mkquKLx6j19tAT
      jWRn+iypV4Ce5hpeePVtps08dsjODGYbDlNfNJimacRisf7izPsrg4/ma1lVMBsMVO7zVc+z
      HpyDosKVy/ySshR+4ixHEim3AgkhUOUEez6pY85xCwb1CI2FA8RUA0X5uRljBcpydJA2M+ho
      ySpAlnRigr5ZOhIZOmY3ncRiMXRdPygDxX726+tQ/u/DvTfb7sivHc57R3pt/1Y1nX2O9DlN
      0PdLzKRZ1+FwDCv4WBnpF5Jt9yhsd9xbHQdS8WGz7WbbHazdTMlWOICQ34MvqjOpJJ9tO7eT
      X1SB3QT5hUV4ewOUFrrY29xJjlElGNVYsHDuAE0O+brwxw1UFjjZtrcOhyGJo3AqRqNEnsOM
      ZrAS7u0kEEmiyQlyiyqYUlkysmBCY+/OPUxZMA8rGh1t3RQWF6LISfyhKFUVpbQ01hOKxtFk
      lcqZcyh2j5x/tKWhltzSSci+DjrDKtMqi1GEETkSxGIx0BlQmT21hNpPPkFYnMhygnnzFmAx
      DR9jpylJ9tQ3MW/ObPZ+soOkbmJKZRmqZEaJBckrLqe7tZ5oNEFCVSivmkVZ0cg7AV9nHXFT
      BXmEaAgliHS3M2fObBRhwm7UMOXk4WmrR8FMIpZg7vzq0c20usLO3XXMm1+NhExrk5fSigKS
      skIoHKeirID6mr1gtqPqOnNmDZ2KZz9CTbKrtpn51bPYsXUT+WVTMAsZZ24+vkAgMxUg151P
      VA4AEpWTJuP3dtPeE8TW6aF63jxMVgv5Lge5DivtnTUHOdnl5hUQVcKAhM2oo0oWgn4/3oCP
      qtJCpk2fSdRoZnJVAb3BCEIdZeCIZKSoqC/5l64qRIJBZCVBMBilsMhNXAOT2UpFmZNkUkMe
      Zd6bwsIiNMBdXIYnUMsnu2twFebjstqJ9XpxF00DIXAVlSNpCsJpQdP3JxoZGqPZSoF7XxrL
      vCKSiRh7amrIzc3BZCuiUJIwmixUluUS1nXk5Oh+DwVFRXQGAWHEJCWQzA4Cfj+dvSGK83OZ
      ObMAo9FCWeVkAj3do2oTAIOZosI8ADQ5gb/Lg5Ci+BULBTYjIGG2OqiaMhmPZ3QRZ5LJSmFe
      n1JPqppEa3cngZ4AeXn5FOTbMlMB/D4fkUic0uICYqEw02bOw+Vow11YhK/Xh7nAQSgUwmTK
      Y1b1nIM+hK/XRzSapKQojxkzZqLqEroi487Po6TQjdEAqiITjMrYTRLu0lHeC+gagVgEzRcE
      OcaUWTPwdHYyfeZ0rBYTRoNAkWVMdidIccoLR5fHMhAMIMwKxXk5uPKKmTLZRiSpEvD0MPWY
      uQR6exHCRTwSoqyikkg0js088pyqynEi4RCh3HxMBh1jXjHV+XlEFQnkKKquo8oycXsukhKl
      svzgzH6D0d0TJqkZsZUWMTnHjigzoiej2HOLyM/NQZIEiiIT9PUSDIewOHLJzx1FOSpNJhgK
      YXW6iYdCzD2hmrbWTmZUlmE2AEJHlhP0eLoJBUO4C0rIsQwfBKXJ8b5yWLn5qJpGZdV0CnN7
      AQMJyZQ1g2Y5usnIQ3CWLOkiqwBZjmoy8gyQJctwfPDua8ixBJMXnIhQFIrzXBiMEjaTRIsn
      yPYP3+DYZUtZv6GWqTOnkm83ghwg4ZqGSw8zZdZszPty2WYVIMsRh9HqYFahi4931xDxdjFz
      Sgl2RymJiJekJiieMocppW56Zs0h4tlDZyCAIcfN3IXlvL9uO6bcMqaW91mbsofgLEccPk8H
      PWGVigI7nf44CW8bU49bhlWN0NodpLggl1ynjW3b9zBn3lxaG2oprqgiEAgjR/xUTp+Dw9Y3
      92cVIMtRzf8PYcYJEvxAZDsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
